{"version":3,"sources":["webpack:///./src/app/reset-password/change-password.component.ts","webpack:///./src/app/reset-password/change-password.module.ts","webpack:///./src/app/reset-password/change-password.routing.ts"],"names":[],"mappings":"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","file":"reset-password-change-password-module.js","sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {HttpService} from \"../services/http-service\";\r\nimport {Config} from \"../../config\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {Subscription} from \"rxjs/Subscription\";\r\nimport {Headers, Response, Http} from '@angular/http';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  template: `\r\n      <preloader-full></preloader-full>\r\n\r\n      <div class=\"page-center\">\r\n          <div class=\"page-center-in\">\r\n              <div class=\"container-fluid\">\r\n                  <form class=\"sign-box reset-password-box\">\r\n                      <!--<div class=\"sign-avatar\">\r\n                          <img src=\"img/avatar-sign.png\" alt=\"\">\r\n                      </div>-->\r\n                      <header class=\"sign-title\">New Password</header>\r\n                      <div class=\"form-group\">\r\n                          <input type=\"password\" class=\"form-control\" name = \"pass1\" placeholder=\"New Password\" [(ngModel)] = \"pass1\"/>\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                          <input type=\"password\" class=\"form-control\" name = \"pass2\" placeholder=\"Confirm New Password\" [(ngModel)] = \"pass2\"/>\r\n                      </div>\r\n                      <button type=\"submit\" class=\"btn btn-rounded btn-block\" (click)=\"reset_pass()\">Submit</button>\r\n                  </form>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  `,\r\n  styles: []\r\n})\r\nexport class ChangePasswordComponent implements OnInit , OnDestroy{\r\n    private sub: Subscription;\r\n    loaded = false;\r\n    private token:string;\r\n    pass1:string;\r\n    pass2:string;\r\n  constructor(private http: HttpService   , private route: ActivatedRoute,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n      this.sub = this.route.params.subscribe(params => {\r\n          this.token = params['token']; // (+) converts string 'id' to a number\r\n          // alert(params['query']);\r\n          let headers = new Headers();\r\n          headers.append('Content-Type', 'application/json');\r\n\r\n          this.http.post(Config.api + '/api-token-verify/', JSON.stringify({\r\n                  \"token\":this.token\r\n              }),\r\n              {headers: headers}).map((response: Response) => response.json()).subscribe(\r\n              data => {\r\n                    this.loaded = true;\r\n              },\r\n              error => {\r\n\r\n                  this.router.navigate(['/page-not-found']);\r\n              });\r\n\r\n          // In a real app: dispatch action to load the details here.\r\n      });\r\n  }\r\n    ngOnDestroy() {\r\n        // localStorage.removeItem('navigated_list');\r\n        this.sub.unsubscribe();\r\n\r\n    }\r\n\r\n    reset_pass(){\r\n        if (!this.pass1){\r\n            Swal.fire(\r\n                'Password is required',\r\n                '',\r\n                'error'\r\n            )\r\n        }\r\n        else if (this.pass1!==this.pass2) {\r\n            Swal.fire(\r\n                'Password not same',\r\n                '',\r\n                'error'\r\n            )\r\n        }\r\n            else{\r\n\r\n            // alert(params['query']);\r\n            let headers = new Headers({'Authorization': 'JWT ' + this.token});\r\n            headers.append('Content-Type', 'application/json');\r\n\r\n            this.http.post(Config.api + '/new_password/', JSON.stringify({\r\n                    \"password\":this.pass1\r\n                }),\r\n                {headers: headers}).map((response: Response) => response.json()).subscribe(\r\n                data => {\r\n                    Swal.fire(\r\n                        'Password changed successfully',\r\n                        '',\r\n                        'success'\r\n                    ).then(() => {this.router.navigate(['/login']);});\r\n                },\r\n                error => {\r\n\r\n                    Swal.fire(\r\n                        'Server error',\r\n                        '',\r\n                        'error'\r\n                    )\r\n                });\r\n            }\r\n\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport {ChangePasswordComponent} from \"./change-password.component\";\r\nimport {ChangePasswordRoutes} from \"./change-password.routing\";\r\nimport {PreloaderModule} from \"../components/preloader.module\";\r\n\r\n\r\n@NgModule({\r\n    imports: [CommonModule, RouterModule.forChild(ChangePasswordRoutes),FormsModule,PreloaderModule],\r\n    declarations: [ChangePasswordComponent]\r\n})\r\n\r\nexport class ChangePasswordModule { }\r\n","import { Routes } from '@angular/router';\r\nimport {ChangePasswordComponent} from \"./change-password.component\";\r\n\r\nexport const ChangePasswordRoutes: Routes = [{\r\n    path: '',\r\n    component: ChangePasswordComponent,\r\n    data: {\r\n        heading: '',\r\n    }\r\n}];\r\n"],"sourceRoot":""}