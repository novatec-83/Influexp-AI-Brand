{"version":3,"sources":["webpack:///./node_modules/angular2-jwt/angular2-jwt.js","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login.routing.ts","webpack:///./src/app/login/login.scss"],"names":[],"mappings":";;;;;;;;;;AAAa;AACb;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oCAAoC;AACvE;AACA,aAAa,mBAAO,CAAC,iEAAe;AACpC,aAAa,mBAAO,CAAC,iEAAe;AACpC,mBAAmB,mBAAO,CAAC,uEAAiB;AAC5C,mBAAO,CAAC,uGAAiC;AACzC,mBAAO,CAAC,2FAA2B;AACnC,mBAAO,CAAC,6FAA4B;AACpC;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,2DAA2D,EAAE;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,+CAA+C;AACnG;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gGAAgG,8CAA8C,EAAE;AAChJ;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mCAAmC,uDAAuD;AAC1F;AACA;AACA,mCAAmC,0DAA0D;AAC7F;AACA;AACA,mCAAmC,yDAAyD;AAC5F;AACA;AACA,mCAAmC,0DAA0D;AAC7F;AACA;AACA,mCAAmC,2DAA2D;AAC9F;AACA;AACA,mCAAmC,wDAAwD;AAC3F;AACA;AACA,mCAAmC,2DAA2D;AAC9F;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0D;AACA;AACA,mC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iDAAiD;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;ACzWA,mvFAAmvF,wBAAwB,kHAAkH,kBAAkB,WAAW,YAAY,qpBAAqpB,MAAM,MAAM,+1FAA+1F,uBAAuB,8CAA8C,wCAAwC,iyBAAiyB,wBAAwB,sHAAsH,kBAAkB,WAAW,YAAY,4qBAA4qB,MAAM,MAAM,mP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhnQ;AACM;AACnB;AACe;AACc;AAEzB;AACqB;AACF;AAC9B;AACmB;AACE;AAE+B;AAC1C;AAQzC;IAiBI,wBACY,KAAqB,EACrB,MAAc,EACd,qBAA4C,EAC5C,YAA0B,EAC1B,IAAiB,EAAU,KAAiB,EAAU,OAAoB,EAAU,OAAwB,EAAU,WAAwB;QAL1J,iBAK+J;QAJnJ,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,iBAAY,GAAZ,YAAY,CAAc;QAC1B,SAAI,GAAJ,IAAI,CAAa;QAAU,UAAK,GAAL,KAAK,CAAY;QAAU,YAAO,GAAP,OAAO,CAAa;QAAU,YAAO,GAAP,OAAO,CAAiB;QAAU,gBAAW,GAAX,WAAW,CAAa;QArB1J,UAAK,GAAQ,EAAE,CAAC;QAChB,SAAI,GAAQ,EAAE,CAAC;QAIf,cAAS,GAAc,IAAI,uDAAS,EAAE,CAAC;QAEvC,WAAM,GAAE,WAAW,CAAC;QACpB,WAAM,GAAE,kBAAkB,CAAC;QAC3B,SAAI,GAAE,IAAI,CAAC;QACX,cAAS,GAAE,IAAI,CAAC;QAChB,oBAAe,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;YAClC,yDAAU,CAAC,QAAQ;SACtB,CAAC,CAAC;QACH,wBAAmB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE;YACtC,yDAAU,CAAC,QAAQ;SAAC,CAAC,CAAC;QA8B1B,mBAAc,GAAG,UAAC,IAAI;YACpB,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;YACvB,IAAM,OAAO,GAAG,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;YACvD,IAAI,IAAI,EAAE;gBACR,IAAM,UAAU,GAAG,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,8CAAM,CAAC,GAAG,GAAG,eAAe,EAAE,IAAI,CAAC,SAAS,CAC7E;oBACE,IAAI;iBACL,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;gBAE5B,UAAU,CAAC,SAAS,CAAC,cAAI;oBACrB,IAAI,IAAI,GAAG;wBACV,OAAO,EAAE,KAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO;wBAC1D,QAAQ,EAAE,KAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ;wBAC5D,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC;qBAAE,CAAC;oBACxB,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;wBACtB,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;wBACtC,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;wBAC1D,YAAY,CAAC,OAAO,CAAC,cAAc,EAAG,KAAI,CAAC,GAAG,CAAC,CAAC;wBAChD,uDAAuD;wBACvD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;wBAGrC,KAAI,CAAC,WAAW,EAAE,CAAC;qBAEpB;gBACH,CAAC,CACF,CAAC;aACH;QACH,CAAC;IArD6J,CAAC;IAE/J,iCAAQ,GAAR;QACI,qBAAqB;QACrB,MAAM,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAEf,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC;QAEpC,yDAAyD;QACzD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,YAAY,CAAC;IACtF,CAAC;IAEO,gCAAO,GAAf;QACI,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACzD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;YAClD,0BAA0B;YAE1B,EAAE,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;YACnC,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;QAE5D,CAAC,CAAC,CAAC;IACP,CAAC;IAmCD,oCAAW,GAAX;QACI,kDAAI,CAAC,IAAI,CAAC;YACR,IAAI,EAAE,SAAS;YACf,KAAK,EAAE,mDAAmD;gBAC1D,IAAI;YACJ,iBAAiB,EAAE,KAAK;YACxB,KAAK,EAAE,OAAO;YACd,KAAK,EAAE,IAAI;SACZ,CAAC,CAAC;IACL,CAAC;IAUH,sCAAa,GAAb;QACI,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,2EAAqB,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,cAAI,IAAI,cAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAjB,CAAiB,CAAC,CAAC;IAExH,CAAC;IACD,oCAAW,GAAX;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,yEAAmB,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,iBAAO,IAAI,cAAO,CAAC,GAAG,CAAC,OAAO,CAAC,EAApB,CAAoB,CAAC,CAAC;IAC5H,CAAC;IACH,8BAAK,GAAL;QAAA,iBAoEC;QAnEG,IAAI,CAAC,SAAS,GAAE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QACrC,iDAAiD;QACjD,IAAG,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;YACvB,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;iBACrE,SAAS,CACN,cAAI;gBAEA,kBAAkB;gBAC1B,wBAAwB;gBACxB,uDAAuD;gBACvD,kBAAkB;gBAClB,yBAAyB;gBACzB,8CAA8C;gBAC9C,iCAAiC;gBACjC,oCAAoC;gBACpC,0BAA0B;gBAC1B,sBAAsB;gBAEtB,YAAY;gBACZ,IAAI;gBACJ,QAAQ;gBACJ,uDAAuD;gBACnD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACvC,YAAY,CAAC,OAAO,CAAC,iBAAiB,EAAE,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBAC7D,kDAAI,CAAC,IAAI,CAAC;oBACN,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,kDAAkD;wBACzD,IAAI;oBACJ,kDAAkD;oBAClD,iBAAiB,EAAE,KAAK;oBACxB,KAAK,EAAE,OAAO;oBACd,KAAK,EAAE,IAAI;iBAEd,CAAC,CAAC;gBACP,IAAI;YACJ,CAAC,EACD,eAAK;gBACD,IAAG,KAAK,CAAC,MAAM,IAAG,GAAG,EAAC;oBAClB,kDAAI,CAAC,IAAI,CAAC;wBACN,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE,2BAA2B;wBAClC,IAAI,EAAE,EAAE;wBACR,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,OAAO;wBACd,KAAK,EAAE,IAAI;qBAEZ,CAAC,CAAC;oBACH,KAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;iBAC7B;gBACD,iDAAiD;gBACjD,IAAG,KAAK,CAAC,MAAM,IAAG,GAAG,EAAC;oBACtB,kDAAI,CAAC,IAAI,CAAC;wBACN,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE,mBAAmB;wBAC1B,IAAI,EAAE,wCAAwC;wBAC9C,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,OAAO;wBACd,KAAK,EAAE,IAAI;qBAEZ,CAAC,CAAC;oBACH,KAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;iBACzB;gBACL,mCAAmC;gBACnC,aAAa;gBACb,gEAAgE;YAC/D,CAAC,CAAC,CAAC;SACf;IACL,CAAC;IACD,+BAAM,GAAN;QAEI,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,8CAAM,CAAC,GAAG,GAAG,iBAAiB,CAAC;IAC1D,CAAC;IACE,iCAAQ,GAAR;QAEC,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,8CAAM,CAAC,GAAG,GAAG,wBAAwB,CAAC;IACjE,CAAC;IApLQ,cAAc;QAP1B,+DAAS,CAAC;YACP,QAAQ,EAAE,QAAS,CAAC,QAAQ,EAAE;;;YAG9B,SAAS,EAAC,CAAC,0EAAe,CAAC;SAC9B,CAAC;yCAoBqB,8DAAc;YACb,sDAAM;YACS,+DAAqB;YAC9B,sDAAY;YACpB,kEAAW,EAAiB,+DAAU,EAAmB,qDAAW,EAAmB,0EAAe,EAAuB,iEAAW;OAtBjJ,cAAc,CAqL1B;IAAD,qBAAC;CAAA;AArL0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBc;AACM;AACA;AACK;AACW;AACd;AACN;AACkF;AAClE;AACf;AAC5C,wDAAwD;AAiBxD;IAAA;IAA2B,CAAC;IAAf,WAAW;QAfvB,8DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,4DAAY,EAAE,wEAAc;gBAC5B,gEAAc;gBACd,oEAAkB;gBAClB,kEAAmB;gBACnB,+DAAa;gBACb,sEAAoB;gBACpB,gBAAgB;gBAChB,mEAAiB;gBACjB,4EAAe,EAAE,4DAAY,CAAC,QAAQ,CAAC,0DAAW,CAAC,EAAC,0DAAW;aAAC;YACpE,OAAO,EAAE,CAAC,+DAAa,EAAE,gEAAc,EAAE,mEAAiB,EAAE,oEAAkB,CAAC;YAC/E,YAAY,EAAE,CAAC,+DAAc,CAAC;SACjC,CAAC;OAEW,WAAW,CAAI;IAAD,kBAAC;CAAA;AAAJ;;;;;;;;;;;;;AC1BxB;AAAA;AAAA;AAAiD;AAI1C,IAAM,WAAW,GAAW,CAAC;QAChC,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+DAAc;QACzB,IAAI,EAAE;YACF,OAAO,EAAE,EAAE;SACd;KACJ,CAAC,CAAC;;;;;;;;;;;;ACXH,0BAA0B,kBAAkB,wBAAwB,4BAA4B,iBAAiB,4DAA4D,oBAAoB,EAAE,eAAe,qBAAqB,eAAe,wBAAwB,kBAAkB,wBAAwB,4BAA4B,EAAE,wBAAwB,oCAAoC,EAAE,8BAA8B,kCAAkC,kCAAkC,EAAE,mBAAmB,iBAAiB,kCAAkC,4BAA4B,iBAAiB,wBAAwB,EAAE,yCAAyC,uBAAuB,aAAa,aAAa,oBAAoB,oBAAoB,EAAE,wBAAwB,oBAAoB,mBAAmB,qBAAqB,0BAA0B,EAAE,0BAA0B,mBAAmB,EAAE,mBAAmB,cAAc,mBAAmB,oBAAoB,mBAAmB,qBAAqB,EAAE,G","file":"login-login-module.js","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar http_1 = require(\"@angular/http\");\nvar core_1 = require(\"@angular/core\");\nvar Observable_1 = require(\"rxjs/Observable\");\nrequire(\"rxjs/add/observable/fromPromise\");\nrequire(\"rxjs/add/observable/defer\");\nrequire(\"rxjs/add/operator/mergeMap\");\nvar AuthConfigConsts = (function () {\n    function AuthConfigConsts() {\n    }\n    return AuthConfigConsts;\n}());\nAuthConfigConsts.DEFAULT_TOKEN_NAME = 'token';\nAuthConfigConsts.DEFAULT_HEADER_NAME = 'Authorization';\nAuthConfigConsts.HEADER_PREFIX_BEARER = 'Bearer ';\nexports.AuthConfigConsts = AuthConfigConsts;\nvar AuthConfigDefaults = {\n    headerName: AuthConfigConsts.DEFAULT_HEADER_NAME,\n    headerPrefix: null,\n    tokenName: AuthConfigConsts.DEFAULT_TOKEN_NAME,\n    tokenGetter: function () { return localStorage.getItem(AuthConfigDefaults.tokenName); },\n    noJwtError: false,\n    noClientCheck: false,\n    globalHeaders: [],\n    noTokenScheme: false\n};\n/**\n * Sets up the authentication configuration.\n */\nvar AuthConfig = (function () {\n    function AuthConfig(config) {\n        config = config || {};\n        this._config = objectAssign({}, AuthConfigDefaults, config);\n        if (this._config.headerPrefix) {\n            this._config.headerPrefix += ' ';\n        }\n        else if (this._config.noTokenScheme) {\n            this._config.headerPrefix = '';\n        }\n        else {\n            this._config.headerPrefix = AuthConfigConsts.HEADER_PREFIX_BEARER;\n        }\n        if (config.tokenName && !config.tokenGetter) {\n            this._config.tokenGetter = function () { return localStorage.getItem(config.tokenName); };\n        }\n    }\n    AuthConfig.prototype.getConfig = function () {\n        return this._config;\n    };\n    return AuthConfig;\n}());\nexports.AuthConfig = AuthConfig;\nvar AuthHttpError = (function (_super) {\n    __extends(AuthHttpError, _super);\n    function AuthHttpError() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return AuthHttpError;\n}(Error));\nexports.AuthHttpError = AuthHttpError;\n/**\n * Allows for explicit authenticated HTTP requests.\n */\nvar AuthHttp = (function () {\n    function AuthHttp(options, http, defOpts) {\n        var _this = this;\n        this.http = http;\n        this.defOpts = defOpts;\n        this.config = options.getConfig();\n        this.tokenStream = new Observable_1.Observable(function (obs) {\n            obs.next(_this.config.tokenGetter());\n        });\n    }\n    AuthHttp.prototype.mergeOptions = function (providedOpts, defaultOpts) {\n        var newOptions = defaultOpts || new http_1.RequestOptions();\n        if (this.config.globalHeaders) {\n            this.setGlobalHeaders(this.config.globalHeaders, providedOpts);\n        }\n        newOptions = newOptions.merge(new http_1.RequestOptions(providedOpts));\n        return newOptions;\n    };\n    AuthHttp.prototype.requestHelper = function (requestArgs, additionalOptions) {\n        var options = new http_1.RequestOptions(requestArgs);\n        if (additionalOptions) {\n            options = options.merge(additionalOptions);\n        }\n        return this.request(new http_1.Request(this.mergeOptions(options, this.defOpts)));\n    };\n    AuthHttp.prototype.requestWithToken = function (req, token) {\n        if (!this.config.noClientCheck && !tokenNotExpired(undefined, token)) {\n            if (!this.config.noJwtError) {\n                return new Observable_1.Observable(function (obs) {\n                    obs.error(new AuthHttpError('No JWT present or has expired'));\n                });\n            }\n        }\n        else {\n            req.headers.set(this.config.headerName, this.config.headerPrefix + token);\n        }\n        return this.http.request(req);\n    };\n    AuthHttp.prototype.setGlobalHeaders = function (headers, request) {\n        if (!request.headers) {\n            request.headers = new http_1.Headers();\n        }\n        headers.forEach(function (header) {\n            var key = Object.keys(header)[0];\n            var headerValue = header[key];\n            request.headers.set(key, headerValue);\n        });\n    };\n    AuthHttp.prototype.request = function (url, options) {\n        var _this = this;\n        if (typeof url === 'string') {\n            return this.get(url, options); // Recursion: transform url from String to Request\n        }\n        // else if ( ! url instanceof Request ) {\n        //   throw new Error('First argument must be a url string or Request instance.');\n        // }\n        // from this point url is always an instance of Request;\n        var req = url;\n        // Create a cold observable and load the token just in time\n        return Observable_1.Observable.defer(function () {\n            var token = _this.config.tokenGetter();\n            if (token instanceof Promise) {\n                return Observable_1.Observable.fromPromise(token).mergeMap(function (jwtToken) { return _this.requestWithToken(req, jwtToken); });\n            }\n            else {\n                return _this.requestWithToken(req, token);\n            }\n        });\n    };\n    AuthHttp.prototype.get = function (url, options) {\n        return this.requestHelper({ body: '', method: http_1.RequestMethod.Get, url: url }, options);\n    };\n    AuthHttp.prototype.post = function (url, body, options) {\n        return this.requestHelper({ body: body, method: http_1.RequestMethod.Post, url: url }, options);\n    };\n    AuthHttp.prototype.put = function (url, body, options) {\n        return this.requestHelper({ body: body, method: http_1.RequestMethod.Put, url: url }, options);\n    };\n    AuthHttp.prototype.delete = function (url, options) {\n        return this.requestHelper({ body: '', method: http_1.RequestMethod.Delete, url: url }, options);\n    };\n    AuthHttp.prototype.patch = function (url, body, options) {\n        return this.requestHelper({ body: body, method: http_1.RequestMethod.Patch, url: url }, options);\n    };\n    AuthHttp.prototype.head = function (url, options) {\n        return this.requestHelper({ body: '', method: http_1.RequestMethod.Head, url: url }, options);\n    };\n    AuthHttp.prototype.options = function (url, options) {\n        return this.requestHelper({ body: '', method: http_1.RequestMethod.Options, url: url }, options);\n    };\n    return AuthHttp;\n}());\nAuthHttp = __decorate([\n    core_1.Injectable(),\n    __metadata(\"design:paramtypes\", [AuthConfig, http_1.Http, http_1.RequestOptions])\n], AuthHttp);\nexports.AuthHttp = AuthHttp;\n/**\n * Helper class to decode and find JWT expiration.\n */\nvar JwtHelper = (function () {\n    function JwtHelper() {\n    }\n    JwtHelper.prototype.urlBase64Decode = function (str) {\n        var output = str.replace(/-/g, '+').replace(/_/g, '/');\n        switch (output.length % 4) {\n            case 0: {\n                break;\n            }\n            case 2: {\n                output += '==';\n                break;\n            }\n            case 3: {\n                output += '=';\n                break;\n            }\n            default: {\n                throw 'Illegal base64url string!';\n            }\n        }\n        return this.b64DecodeUnicode(output);\n    };\n    // credits for decoder goes to https://github.com/atk\n    JwtHelper.prototype.b64decode = function (str) {\n        var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        var output = '';\n        str = String(str).replace(/=+$/, '');\n        if (str.length % 4 == 1) {\n            throw new Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n        }\n        for (\n        // initialize result and counters\n        var bc = 0, bs = void 0, buffer = void 0, idx = 0; \n        // get next character\n        buffer = str.charAt(idx++); \n        // character found in table? initialize bit storage and add its ascii value;\n        ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n            // and if not first of each 4 characters,\n            // convert the first 8 bits to one ascii character\n            bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {\n            // try to find character in table (0-63, not found => -1)\n            buffer = chars.indexOf(buffer);\n        }\n        return output;\n    };\n    // https://developer.mozilla.org/en/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_Unicode_Problem\n    JwtHelper.prototype.b64DecodeUnicode = function (str) {\n        return decodeURIComponent(Array.prototype.map.call(this.b64decode(str), function (c) {\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n    };\n    JwtHelper.prototype.decodeToken = function (token) {\n        var parts = token.split('.');\n        if (parts.length !== 3) {\n            throw new Error('JWT must have 3 parts');\n        }\n        var decoded = this.urlBase64Decode(parts[1]);\n        if (!decoded) {\n            throw new Error('Cannot decode the token');\n        }\n        return JSON.parse(decoded);\n    };\n    JwtHelper.prototype.getTokenExpirationDate = function (token) {\n        var decoded;\n        decoded = this.decodeToken(token);\n        if (!decoded.hasOwnProperty('exp')) {\n            return null;\n        }\n        var date = new Date(0); // The 0 here is the key, which sets the date to the epoch\n        date.setUTCSeconds(decoded.exp);\n        return date;\n    };\n    JwtHelper.prototype.isTokenExpired = function (token, offsetSeconds) {\n        var date = this.getTokenExpirationDate(token);\n        offsetSeconds = offsetSeconds || 0;\n        if (date == null) {\n            return false;\n        }\n        // Token expired?\n        return !(date.valueOf() > (new Date().valueOf() + (offsetSeconds * 1000)));\n    };\n    return JwtHelper;\n}());\nexports.JwtHelper = JwtHelper;\n/**\n * Checks for presence of token and that token hasn't expired.\n * For use with the @CanActivate router decorator and NgIf\n */\nfunction tokenNotExpired(tokenName, jwt) {\n    if (tokenName === void 0) { tokenName = AuthConfigConsts.DEFAULT_TOKEN_NAME; }\n    var token = jwt || localStorage.getItem(tokenName);\n    var jwtHelper = new JwtHelper();\n    return token != null && !jwtHelper.isTokenExpired(token);\n}\nexports.tokenNotExpired = tokenNotExpired;\nexports.AUTH_PROVIDERS = [\n    {\n        provide: AuthHttp,\n        deps: [http_1.Http, http_1.RequestOptions],\n        useFactory: function (http, options) {\n            return new AuthHttp(new AuthConfig(), http, options);\n        }\n    }\n];\nfunction provideAuth(config) {\n    return [\n        {\n            provide: AuthHttp,\n            deps: [http_1.Http, http_1.RequestOptions],\n            useFactory: function (http, options) {\n                return new AuthHttp(new AuthConfig(config), http, options);\n            }\n        }\n    ];\n}\nexports.provideAuth = provideAuth;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\nfunction toObject(val) {\n    if (val === null || val === undefined) {\n        throw new TypeError('Object.assign cannot be called with null or undefined');\n    }\n    return Object(val);\n}\nfunction objectAssign(target) {\n    var source = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        source[_i - 1] = arguments[_i];\n    }\n    var from;\n    var to = toObject(target);\n    var symbols;\n    for (var s = 1; s < arguments.length; s++) {\n        from = Object(arguments[s]);\n        for (var key in from) {\n            if (hasOwnProperty.call(from, key)) {\n                to[key] = from[key];\n            }\n        }\n        if (Object.getOwnPropertySymbols) {\n            symbols = Object.getOwnPropertySymbols(from);\n            for (var i = 0; i < symbols.length; i++) {\n                if (propIsEnumerable.call(from, symbols[i])) {\n                    to[symbols[i]] = from[symbols[i]];\n                }\n            }\n        }\n    }\n    return to;\n}\n/**\n * Module for angular2-jwt\n * @experimental\n */\nvar AuthModule = AuthModule_1 = (function () {\n    function AuthModule(parentModule) {\n        if (parentModule) {\n            throw new Error('AuthModule is already loaded. Import it in the AppModule only');\n        }\n    }\n    AuthModule.forRoot = function (config) {\n        return {\n            ngModule: AuthModule_1,\n            providers: [\n                { provide: AuthConfig, useValue: config }\n            ]\n        };\n    };\n    return AuthModule;\n}());\nAuthModule = AuthModule_1 = __decorate([\n    core_1.NgModule({\n        imports: [http_1.HttpModule],\n        providers: [AuthHttp, JwtHelper]\n    }),\n    __param(0, core_1.Optional()), __param(0, core_1.SkipSelf()),\n    __metadata(\"design:paramtypes\", [AuthModule])\n], AuthModule);\nexports.AuthModule = AuthModule;\nvar AuthModule_1;\n//# sourceMappingURL=angular2-jwt.js.map","module.exports = \"<!-- <app-loader></app-loader> -->\\r\\n  <div class=\\\"flexy signin-signup\\\">\\r\\n      <form class=\\\"form-content\\\"(ngSubmit)=\\\"!userFormControl.hasError('required') && !userFormControl.hasError('pattern') && !passwordFormControl.hasError('required')\\r\\n      && login()\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n          <div class=\\\"text-center\\\">\\r\\n              <img class=\\\"w-50\\\" src=\\\"../../assets/img/Logo.png\\\" alt=\\\"image\\\">\\r\\n          </div>\\r\\n          <ul>\\r\\n            <li class=\\\"mr-2\\\">\\r\\n            <br> <a (click)=\\\" facebooklogin()\\\"> <img src=\\\"../../assets/img/icon-facebook.png\\\"> </a>\\r\\n            </li>\\r\\n            <li class=\\\"ml-2\\\">\\r\\n               <br> <a (click)=\\\"googlelogin()\\\"> <img src=\\\"../../assets/img/icon-Google.png\\\"> </a>\\r\\n            </li>\\r\\n          </ul>\\r\\n            <mat-form-field class=\\\"w-100 mb-3\\\">\\r\\n              <input matInput type=\\\"text\\\" placeholder=\\\"Username\\\"  tabindex=1 [formControl]=\\\"userFormControl\\\" [(ngModel)]=\\\"model.username\\\" required>\\r\\n              <span class=\\\"pointer\\\" *ngIf=\\\"model.username\\\"  matSuffix md-list-icon aria-label=\\\"Clear\\\" (click)=\\\"model.username=''\\\">\\r\\n                              <i class=\\\"fa fa-close\\\"></i>\\r\\n                </span>\\r\\n              <mat-error *ngIf=\\\"userFormControl.hasError('pattern')\\\">\\r\\n                Please enter a valid username\\r\\n              </mat-error>\\r\\n              <mat-error *ngIf=\\\"userFormControl.hasError('required')\\\">\\r\\n                Username is <strong>required</strong>\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"w-100\\\">\\r\\n              <input [type]=\\\"hide ? 'password' : 'text'\\\"  matInput placeholder=\\\"Password\\\" tabindex=2 [formControl]=\\\"passwordFormControl\\\" [(ngModel)]=\\\"model.password\\\" required>\\r\\n              <i *ngIf= \\\"hide\\\" class=\\\"fa fa-eye eye-icon\\\" title=\\\"Show Password\\\" (click)=\\\"hide = !hide\\\"></i>\\r\\n              <i *ngIf= \\\"!hide\\\" class=\\\"fa fa-eye-slash eye-icon\\\" title=\\\"Hide Password\\\" (click)=\\\"hide = !hide\\\"></i>\\r\\n  \\r\\n              <mat-error *ngIf=\\\"passwordFormControl.hasError('required')\\\">\\r\\n                Password is <strong>required</strong>\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n            <div class=\\\"row \\\">\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                  <div class=\\\"text-left\\\">\\r\\n                    <mat-slide-toggle name=\\\"stay\\\"\\r\\n                    [(ngModel)]=\\\"model\\\">Stay signed in</mat-slide-toggle><br>\\r\\n    <a class=\\\"forgot-pass\\\" [routerLink]=\\\"['/reset-password']\\\">Forgot Password? </a>\\r\\n                    </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6 text-right\\\">\\r\\n                  <div [ngClass]=\\\"{ 'has-error':!recaptcha}\\\">\\r\\n                      <app-recapcha></app-recapcha>\\r\\n                      <div  style=\\\"font-size: 16px;font-weight: bold;color: red; margin: 3%;\\\"  *ngIf=\\\"!recaptcha\\\" >Recaptcha is require</div>\\r\\n\\r\\n                              </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-12 text-center mt-3\\\">\\r\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Sign In</button>\\r\\n                  <label class=\\\"signup-label\\\"> Don’t have an account?\\r\\n                    <a  routerlink=\\\"/register\\\" href=\\\"/register\\\"><b>Sign Up</b></a></label>\\r\\n                    <div class=\\\"text-center privacy\\\">\\r\\n                      <a href=\\\"https://www.influexpai.com/Terms-and-Conditions\\\" target=\\\"_blank\\\">\\r\\n                        Terms of Use           &nbsp;&nbsp;&nbsp;\\r\\n                      </a><a href=\\\"https://www.influexpai.com/privacy_policy\\\" target=\\\"_blank\\\"> Privacy Policy</a>\\r\\n                    </div>\\r\\n              </div>\\r\\n          </div>\\r\\n        </form>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!--<preloader-full></preloader-full>-->\\r\\n<!--<app-loader></app-loader>-->\\r\\n<!-- <div class=\\\"\\\">\\r\\n    <div class=\\\"\\\">\\r\\n<div class=\\\"login-page\\\">\\r\\n    <div class=\\\"col-lg-4 col-md-8 col-sm-10 col-xs-10 login-wrap\\\">\\r\\n        <form class=\\\"ng-untouched ng-pristine ng-valid\\\"\\r\\n              (ngSubmit)=\\\"!userFormControl.hasError('required') && !userFormControl.hasError('pattern') && !passwordFormControl.hasError('required')\\r\\n               && login()\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n            <div class=\\\"card custom-width\\\">\\r\\n                <div class=\\\"card-header text-center\\\" data-background-color=\\\"rose\\\">\\r\\n                    <h4 class=\\\"card-title\\\">\\r\\n                        <label class=\\\"signin-heading\\\"> Sign in to Your Account</label></h4>\\r\\n                        <ul class=\\\"form-1-sl\\\">\\r\\n                            <li>\\r\\n                                <a (click)=\\\" facebooklogin()\\\"> <img src=\\\"../../assets/img/icon-facebook.png\\\"> </a>\\r\\n                            </li>\\r\\n                            <li>\\r\\n                                <a (click)=\\\"googlelogin()\\\"> <img src=\\\"../../assets/img/icon-Google.png\\\"> </a>\\r\\n                            </li>\\r\\n                        </ul>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"card-content\\\">\\r\\n                    <mat-form-field class=\\\"loginfrom md-size\\\">\\r\\n                        <input matInput type=\\\"text\\\" placeholder=\\\"Username\\\"  tabindex=1 [formControl]=\\\"userFormControl\\\" [(ngModel)]=\\\"model.username\\\" required>\\r\\n                        <span class=\\\"pointer\\\" *ngIf=\\\"model.username\\\"  matSuffix mat-list-icon aria-label=\\\"Clear\\\" (click)=\\\"model.username=''\\\">\\r\\n                            <i class=\\\"fa fa-close\\\" style=\\\"font-size: 23px\\\"></i>\\r\\n                        </span>\\r\\n                        <mat-error *ngIf=\\\"userFormControl.hasError('pattern')\\\">\\r\\n                            Please enter a valid username\\r\\n                        </mat-error>\\r\\n                        <mat-error *ngIf=\\\"userFormControl.hasError('required')\\\">\\r\\n                            Username is <strong>required</strong>\\r\\n                        </mat-error>\\r\\n                    </mat-form-field>\\r\\n\\r\\n                    <mat-form-field class=\\\"loginfrom md-size\\\" >\\r\\n                        <input [type]=\\\"hide ? 'password' : 'text'\\\"  matInput placeholder=\\\"Password\\\" tabindex=2 [formControl]=\\\"passwordFormControl\\\" [(ngModel)]=\\\"model.password\\\" required>\\r\\n                        <mat-icon class=\\\"pointer\\\" data-toggle=\\\"tooltip\\\" title=\\\"{{hide? 'Show' : 'Hide'}}Password\\\" matSuffix (click)=\\\"hide=!hide\\\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon> -->\\r\\n\\r\\n<!--                         \\r\\n                        <mat-error *ngIf=\\\"passwordFormControl.hasError('required')\\\">\\r\\n                            Password is <strong>required</strong>\\r\\n                        </mat-error>\\r\\n                    </mat-form-field>\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"\\\">\\r\\n                    <div class=\\\"checkpad text-left\\\">\\r\\n                        <mat-slide-toggle name=\\\"stay\\\"\\r\\n                                        [(ngModel)]=\\\"model\\\">Stay signed in</mat-slide-toggle><br>\\r\\n                        <a class=\\\"forgot-pass\\\" [routerLink]=\\\"['/reset-password']\\\">Forgot Password? </a>\\r\\n                    </div>\\r\\n                    <div class=\\\"text-center recaptcha-box\\\" [ngClass]=\\\"{ 'has-error':!recaptcha}\\\">\\r\\n                        <app-recapcha></app-recapcha>\\r\\n                        <div  style=\\\"font-size: 16px;font-weight: bold;color: red; margin: 3%;\\\"  *ngIf=\\\"!recaptcha\\\" >Recaptcha is require</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"footer text-center\\\">\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn-login\\\" tabindex=3> Sign in</button> -->\\r\\n                   \\r\\n<!--                    \\r\\n                </div>\\r\\n                <div  class=\\\"have-account\\\">No Account Yet? <a  routerlink=\\\"/register\\\" href=\\\"/register\\\"><b>Sign Up</b></a></div> -->\\r\\n                \\r\\n                <!-- <div  class=\\\"have-account\\\" ><a  href=\\\"https://www.influexpai.com/Terms-and-Conditions\\\" target=\\\"blank\\\">\\r\\n                    Terms of use </a>&nbsp;&nbsp;&nbsp;<a  href=\\\"https://www.influexpai.com/privacy_policy\\\" target=\\\"blank\\\"> Privacy Policy</a></div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-4 col-md-3\\\"></div> \\r\\n</div>\\r\\n    </div>\\r\\n</div> -->\\r\\n\"","﻿import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Config } from '../../config';\r\nimport {HttpService} from '../services/http-service';\r\nimport { AlertService, AuthenticationService } from '../_services';\r\nimport {Http, Response} from '@angular/http';\r\nimport  {UserService} from '../_services';\r\nimport {FormControl, NgForm, Validators} from '@angular/forms';\r\nimport {RecapchaService} from '../recapcha/recapcha.service';\r\nimport swal from \"sweetalert2\";\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthService } from 'angular5-social-login';\r\nimport {  Headers, RequestOptions,  } from '@angular/http';\r\nimport { FacebookLoginProvider, GoogleLoginProvider } from 'angular5-social-login';\r\nimport { JwtHelper } from 'angular2-jwt';\r\n@Component({\r\n    moduleId: module.id.toString(),\r\n    templateUrl: 'login.component.html',\r\n    styleUrls: ['login.scss'],\r\n    providers:[RecapchaService]\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n    model: any = {};\r\n    user: any = {};\r\n    username;\r\n    pic;\r\n    returnUrl: string;\r\n    jwtHelper: JwtHelper = new JwtHelper();\r\n    influencers;\r\n    class1= 'fa fa-eye';\r\n    class2= 'fa fa-eye-splash';\r\n    hide= true;\r\n    recaptcha= true;\r\n    userFormControl = new FormControl('', [\r\n        Validators.required,\r\n    ]);\r\n    passwordFormControl = new FormControl('', [\r\n        Validators.required]);\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService,\r\n        private alertService: AlertService,\r\n        private http: HttpService, private https: HttpClient, private usersvc: UserService, private recptha: RecapchaService, private authService: AuthService) { }\r\n\r\n    ngOnInit() {\r\n        // reset login status\r\n        window.scroll(0,0);\r\n\r\n            this.authenticationService.logout();\r\n\r\n            // get return url from route parameters or default to '/'\r\n            this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/dashboard';\r\n    }\r\n\r\n    private getuser() {\r\n        let cu = JSON.parse(localStorage.getItem('currentUser'));\r\n        this.usersvc.getByUsername(cu.username).subscribe(name => {\r\n            // alert(name.first_name);\r\n\r\n            cu.first_name = name['first_name'];\r\n            localStorage.setItem('currentUser', JSON.stringify(cu));\r\n\r\n        });\r\n    }\r\n\r\n    JWT;\r\n    socialCallBack = (user) => {\r\n      this.user = user;\r\n      console.log(this.user);\r\n      const headers = { 'Content-Type': 'application/json' };\r\n      if (user) {\r\n        const createUser = this.https.post(Config.api + '/sociallogin/', JSON.stringify(\r\n          {\r\n            user\r\n          }), { headers: headers });\r\n  \r\n        createUser.subscribe(data => {\r\n            let user = { \r\n             user_id: this.jwtHelper.decodeToken(data['token']).user_id,\r\n             username: this.jwtHelper.decodeToken(data['token']).username, \r\n             token: data['token'] };\r\n            if (user && user.token) {\r\n              localStorage.setItem('loged_in', '1');\r\n              localStorage.setItem('currentUser', JSON.stringify(user));\r\n              localStorage.setItem('profilePhoto' , this.pic);\r\n              // this.router.navigate(['/dashboard'+ this.username]);\r\n              this.router.navigate(['/dashboard']);\r\n\r\n\r\n              this.showSuccess();\r\n            \r\n            }\r\n          }\r\n        );\r\n      }\r\n    }\r\n\r\n\r\n    showSuccess() {\r\n        swal.fire({\r\n          type: 'success',\r\n          title: 'You have successfully logged in to influexpert.\\n' +\r\n          '\\n',\r\n          showConfirmButton: false,\r\n          width: '512px',\r\n          timer: 4000\r\n        });\r\n      }\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    facebooklogin(): void {\r\n        this.authService.signIn(FacebookLoginProvider.PROVIDER_ID).then(this.socialCallBack).catch(user => console.log(user));\r\n    \r\n      }\r\n      googlelogin() {\r\n        this.authService.signIn(GoogleLoginProvider.PROVIDER_ID).then(this.socialCallBack).catch(message => console.log(message));\r\n      }\r\n    login() {\r\n        this.recaptcha= this.recptha.check();\r\n        // alert('Recaptcha Status is ' + this.recapcha);\r\n        if(this.recaptcha == true) {\r\n            this.authenticationService.login(this.model.username, this.model.password)\r\n                .subscribe(\r\n                    data => {\r\n\r\n                        // this.getuser();\r\n                //   if(data.'Response')\r\n                // if(data['Response'] === 'Account is not activated'){\r\n                //     swal.fire({\r\n                //         type: 'error',\r\n                //         title: 'Account is not activated\"',\r\n                //         text: 'please varify',\r\n                //         showConfirmButton: false,\r\n                //         width: '512px',\r\n                //         timer: 2000\r\n                  \r\n                //       });\r\n                // }\r\n                // else{\r\n                    // if(data['Response'] !== 'Account is not activated'){\r\n                        this.router.navigate([this.returnUrl]);\r\n                        localStorage.setItem('currentPassword', this.model.password);\r\n                        swal.fire({\r\n                            type: 'success',\r\n                            title: 'You have successfully logged in to influexpai.\\n' +\r\n                            '\\n',\r\n                            // text: 'Please check your username or password',\r\n                            showConfirmButton: false,\r\n                            width: '512px',\r\n                            timer: 2000\r\n                      \r\n                        });\r\n                    // }\r\n                    },\r\n                    error => {\r\n                        if(error.status== 403){\r\n                            swal.fire({\r\n                                type: 'error',\r\n                                title: 'Account is not activated\"',\r\n                                text: '',\r\n                                showConfirmButton: false,\r\n                                width: '512px',\r\n                                timer: 2000\r\n                          \r\n                              });\r\n                              this.recptha.resetImg();\r\n                        }\r\n                        // swal('Invalid username or password', 'error');\r\n                        if(error.status== 400){\r\n                        swal.fire({\r\n                            type: 'error',\r\n                            title: 'Wrong Credantials',\r\n                            text: 'Please check your username or password',\r\n                            showConfirmButton: false,\r\n                            width: '512px',\r\n                            timer: 2000\r\n                      \r\n                          });\r\n                          this.recptha.resetImg();\r\n                        }\r\n                    //    this.recptha.capchaText = \"\";\r\n                    // error => {\r\n                    //     this.alertService.error('Invalid username or password.');\r\n                     });\r\n        }\r\n    }\r\n    doThis() {\r\n\r\n        window.location.href = Config.api + '/tweeter_login/';\r\n    }\r\n       doThisFB() {\r\n\r\n        window.location.href = Config.api + '/oauth/login/facebook/';\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule} from '@angular/forms';\r\nimport {PreloaderModule} from '../components/preloader.module';\r\nimport {LoginComponent} from \"./login.component\";\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport {MatFormFieldModule, MatInputModule, MatIconModule, MatCheckboxModule, MatSlideToggleModule} from '@angular/material';\r\nimport {RecapchaModule} from '../recapcha/recapcha.module';\r\nimport {LoginRoutes} from \"./login.routing\";\r\n// import {LoaderModule} from '../loader/loader.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule, RecapchaModule,\r\n        MatInputModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatIconModule,\r\n        MatSlideToggleModule,\r\n        // LoaderModule,\r\n        MatCheckboxModule,\r\n        PreloaderModule, RouterModule.forChild(LoginRoutes),FormsModule],\r\n    exports: [MatIconModule, MatInputModule, MatCheckboxModule, MatFormFieldModule],\r\n    declarations: [LoginComponent]\r\n})\r\n\r\nexport class LoginModule { }\r\n","import { Routes } from '@angular/router';\r\nimport {LoginComponent} from \"./login.component\";\r\n\r\n\r\n\r\nexport const LoginRoutes: Routes = [{\r\n    path: '',\r\n    component: LoginComponent,\r\n    data: {\r\n        heading: '',\r\n    }\r\n}];\r\n","module.exports = \".flexy {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  height: 100%;\\n  background: url('LoginInflu.png') center/100% no-repeat;\\n  padding: 68px 0; }\\n\\n.flexy ul {\\n  list-style: none;\\n  padding: 0;\\n  margin-bottom: 15px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center; }\\n\\n.flexy ul li a img {\\n  transition: all .4s ease-in-out; }\\n\\n.flexy ul li a img:hover {\\n  -webkit-transform: scale(1.2);\\n          transform: scale(1.2); }\\n\\n.form-content {\\n  width: 500px;\\n  background: url('backkk.png');\\n  padding: 10px 20px 20px;\\n  opacity: 0.8;\\n  border-radius: 20px; }\\n\\n.fa-eye,\\n.fa-eye-slash,\\n.fa-close {\\n  position: absolute;\\n  right: 0;\\n  top: 6px;\\n  font-size: 20px;\\n  cursor: pointer; }\\n\\n.forgot,\\n.privacy {\\n  font-size: 12px;\\n  color: #304ffe;\\n  font-weight: 600;\\n  display: inline-block; }\\n\\n.forgot,\\n.privacy a {\\n  color: #304ffe; }\\n\\n.signup-label {\\n  margin: 0;\\n  color: #304ffe;\\n  font-size: 16px;\\n  display: block;\\n  font-weight: 600; }\\n\""],"sourceRoot":""}
