{"version":3,"sources":["webpack:///./src/app/reset-password/reset-password.component.html","webpack:///./src/app/reset-password/reset-password.component.ts","webpack:///./src/app/reset-password/reset-password.module.ts","webpack:///./src/app/reset-password/reset-password.routing.ts"],"names":[],"mappings":";;;;;;;;;AAAA,kkD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACd;AACpC,oDAAoD;AACC;AACtB;AAC0B;AAGH;AAOtD;IAIE,gCAAoB,IAAiB,EAAU,KAAqB;QAAhD,SAAI,GAAJ,IAAI,CAAa;QAAU,UAAK,GAAL,KAAK,CAAgB;IAAI,CAAC;IAEzE,yCAAQ,GAAR;QACE,qDAAqD;QACrD,kCAAkC;QAClC,QAAQ;QACR,MAAM,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;IAErB,CAAC;IACC,+CAAc,GAAd;QACI,gBAAgB;QAChB,IAAI,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAEnD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,8CAAM,CAAC,GAAG,GAAG,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC;YACxD,KAAK,EAAE,IAAI,CAAC,KAAK;SACpB,CAAC,EACF,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC,SAAS,CAC1E,cAAI;YAEA,kDAAI,CAAC,IAAI,CACL,2BAA2B,EAC3B,EAAE,EACF,SAAS,CACZ;QACL,CAAC,EACD,eAAK;YAED,kDAAI,CAAC,IAAI,CACL,sBAAsB,EACtB,EAAE,EACF,OAAO,CACV;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IAtCQ,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;SAG/B,CAAC;yCAK0B,kEAAW,EAAiB,8DAAc;OAJzD,sBAAsB,CAwClC;IAAD,6BAAC;CAAA;AAxCkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfM;AACM;AACA;AACM;AACV;AACuB;AACL;AACE;AAQ/D;IAAA;IAAmC,CAAC;IAAvB,mBAAmB;QAL/B,8DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,4DAAY,EAAC,kEAAY,EAAE,4DAAY,CAAC,QAAQ,CAAC,2EAAmB,CAAC,EAAC,0DAAW,EAAC,4EAAe,CAAC;YAC5G,YAAY,EAAE,CAAC,gFAAsB,CAAC;SACzC,CAAC;OAEW,mBAAmB,CAAI;IAAD,0BAAC;CAAA;AAAJ;;;;;;;;;;;;;ACdhC;AAAA;AAAA;AAAkE;AAI3D,IAAM,mBAAmB,GAAW,CAAC;QACxC,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gFAAsB;QACjC,IAAI,EAAE;YACF,OAAO,EAAE,EAAE;SACd;KACJ,CAAC,CAAC","file":"reset-password-reset-password-module.js","sourcesContent":["module.exports = \"<preloader-full></preloader-full>\\r\\n<app-loader></app-loader>\\r\\n<div class=\\\"page-center\\\">\\r\\n  <div class=\\\"reset-pass\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <form class=\\\"sign-box reset-password-box\\\">\\r\\n        <!--<div class=\\\"sign-avatar\\\">\\r\\n            <img src=\\\"img/avatar-sign.png\\\" alt=\\\"\\\">\\r\\n        </div>-->\\r\\n        <!-- <header class=\\\"sign-title\\\">Reset Password</header>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"E-Mail or Phone\\\" name = \\\"email_phone\\\" [(ngModel)]=\\\"email\\\"/>\\r\\n        </div>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-rounded\\\" >Reset</button>\\r\\n        or<a [routerLink]=\\\"['/confirm-password']\\\">Sign in</a> -->\\r\\n        <div class=\\\"card custom-width\\\">\\r\\n            <div class=\\\"card-header text-center\\\" data-background-color=\\\"rose\\\">\\r\\n                <h4 class=\\\"card-title\\\">\\r\\n                    <label class=\\\"signin-heading\\\">Reset Password</label></h4>\\r\\n              </div>\\r\\n              <div class=\\\"card-content\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"E-Mail or Phone\\\" name = \\\"email_phone\\\" [(ngModel)]=\\\"email\\\"/>\\r\\n              \\r\\n              <button type=\\\"submit\\\" class=\\\"btn-login\\\" (click)=\\\"reset_password()\\\">Reset</button>\\r\\n              <label>Or</label>\\r\\n              <a class=\\\"btn-login\\\" [routerLink]=\\\"['/confirm-password']\\\">Sign in</a>\\r\\n            </div>\\r\\n      </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div><!--.page-center-->\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {Config} from \"../../config\";\r\n// import {HttpService} from '../serv/http-service';\r\nimport {HttpService} from '../services/http-service';\r\nimport Swal from 'sweetalert2';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nimport {Headers, Response, Http} from '@angular/http';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html'\r\n\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n  email;\r\n  code;\r\n  public sub: Subscription;\r\n  constructor(private http: HttpService, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    // this.sub = this.route.params.subscribe(params => {\r\n    //     this.code = params['code'];\r\n    //   });\r\n    window.scroll(0,0);\r\n\r\n  }\r\n    reset_password(){\r\n        // alert('code')\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n\r\n        this.http.post(Config.api + '/forget_password/', JSON.stringify({\r\n                email: this.email\r\n            }),\r\n            {headers: headers}).map((response: Response) => response.json()).subscribe(\r\n            data => {\r\n\r\n                Swal.fire(\r\n                    'Reset password email sent',\r\n                    '',\r\n                    'success'\r\n                )\r\n            },\r\n            error => {\r\n\r\n                Swal.fire(\r\n                    'Wrong email/username',\r\n                    '',\r\n                    'error'\r\n                )\r\n            });\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport {LoaderModule} from '../loader/loader.module';\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport {ResetPasswordComponent} from \"./reset-password.component\";\r\nimport {ResetPasswordRoutes} from \"./reset-password.routing\";\r\nimport {PreloaderModule} from \"../components/preloader.module\";\r\n\r\n\r\n@NgModule({\r\n    imports: [CommonModule,LoaderModule, RouterModule.forChild(ResetPasswordRoutes),FormsModule,PreloaderModule],\r\n    declarations: [ResetPasswordComponent]\r\n})\r\n\r\nexport class ResetPasswordModule { }\r\n","import { Routes } from '@angular/router';\r\nimport {ResetPasswordComponent} from \"./reset-password.component\";\r\n\r\n\r\n\r\nexport const ResetPasswordRoutes: Routes = [{\r\n    path: '',\r\n    component: ResetPasswordComponent,\r\n    data: {\r\n        heading: '',\r\n    }\r\n}];\r\n"],"sourceRoot":""}