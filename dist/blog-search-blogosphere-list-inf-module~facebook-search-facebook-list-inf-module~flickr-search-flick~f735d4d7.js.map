{"version":3,"sources":["webpack:///./node_modules/ng2-inline-editor/ng2-inline-editor.es5.js"],"names":[],"mappings":"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A;AACA;AACA,oBAAoB;AACpB;AACA,0BAA0B,sBAAsB,EAAE;AAClD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA,0BAA0B,oBAAoB,EAAE;AAChD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,sEAAsE,oBAAoB;AAC1F;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,uEAAuE,qBAAqB;AAC5F;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,sFAAsF,oDAAoD,+DAA+D,cAAc;AACvN;AACA,iCAAiC,gEAAiB;AAClD,qCAAqC,gEAAU,cAAc,8BAA8B,EAAE;AAC7F;AACA,qBAAqB;AACrB;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA,oDAAoD;AACpD,KAAK,OAAO,sEAAwB,GAAG;AACvC,EAAE;AACF;AACA,cAAc,OAAO,mDAAK,EAAE;AAC5B,gBAAgB,OAAO,oDAAM,EAAE;AAC/B,gBAAgB,OAAO,oDAAM,EAAE;AAC/B,kBAAkB,OAAO,oDAAM,EAAE;AACjC,eAAe,OAAO,mDAAK,EAAE;AAC7B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,cAAc,OAAO,mDAAK,EAAE;AAC5B,cAAc,OAAO,mDAAK,EAAE;AAC5B,aAAa,OAAO,mDAAK,EAAE;AAC3B,aAAa,OAAO,mDAAK,EAAE;AAC3B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,uBAAuB,OAAO,mDAAK,EAAE;AACrC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,cAAc,OAAO,mDAAK,EAAE;AAC5B,cAAc,OAAO,mDAAK,EAAE;AAC5B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,mBAAmB,OAAO,uDAAS,uBAAuB,OAAO,8DAAgB,EAAE,IAAI;AACvF;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY,EAAE,0DAAW;AACnD;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA,iDAAiD,WAAW;AACyN","file":"blog-search-blogosphere-list-inf-module~facebook-search-facebook-list-inf-module~flickr-search-flick~f735d4d7.js","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Component, ComponentFactoryResolver, EventEmitter, Input, NgModule, Output, Renderer, ViewChild, ViewContainerRef, forwardRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';\n/**\n * @abstract\n */\nvar InputBase = (function () {\n    /**\n     * @param {?} renderer\n     */\n    function InputBase(renderer) {\n        this.renderer = renderer;\n        this.isNumeric = false;\n        this.isRegexTestable = false;\n    }\n    /**\n     * @param {?} _context\n     * @return {?}\n     */\n    InputBase.prototype.setContext = function (_context) {\n        this.context = _context;\n        this.whenContextIsReady();\n    };\n    /**\n     * @return {?}\n     */\n    InputBase.prototype.whenContextIsReady = function () { };\n    /**\n     * @return {?}\n     */\n    InputBase.prototype.getPlaceholder = function () {\n        return this.context.isEmpty ? this.context.empty : ((this.context.value));\n    };\n    /**\n     * @return {?}\n     */\n    InputBase.prototype.focus = function () {\n        var _this = this;\n        setTimeout(function () { return _this.renderer.invokeElementMethod(_this.inputElement, \"focus\", []); });\n    };\n    return InputBase;\n}());\nvar InputNumberComponent = (function (_super) {\n    __extends(InputNumberComponent, _super);\n    /**\n     * @param {?} renderer\n     */\n    function InputNumberComponent(renderer) {\n        var _this = _super.call(this, renderer) || this;\n        _this.isNumeric = true;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    InputNumberComponent.prototype.ngOnInit = function () {\n        this.inputElement = this.inputRef.nativeElement;\n    };\n    return InputNumberComponent;\n}(InputBase));\nInputNumberComponent.decorators = [\n    { type: Component, args: [{\n                selector: \"inline-editor-number\",\n                styles: [\"a {     text-decoration: none;     color: #428bca;     border-bottom: dashed 1px #428bca;     cursor: pointer;     line-height: 2;     margin-right: 5px;     margin-left: 5px; }   /* editable-empty */  .editable-empty, .editable-empty:hover, .editable-empty:focus, a.editable-empty, a.editable-empty:hover, a.editable-empty:focus {     font-style: italic;     color: #DD1144;     text-decoration: none; }  .inlineEditForm {     display: inline-block;     white-space: nowrap;     margin: 0; }  #inlineEditWrapper {     display: inline-block; }  .inlineEditForm input, select {     width: auto;     display: inline; }  .editInvalid {     color: #a94442;     margin-bottom: 0; }  .error {     border-color: #a94442; }  [hidden] {     display: none; }\"],\n                template: \"<input #inputRef type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"context.value\\\" [required]=\\\"context.required\\\"\\n                      [disabled]=\\\"context.disabled\\\" [name]=\\\"context.name\\\" [placeholder]=\\\"context.placeholder\\\" [size]=\\\"context.size\\\"/>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nInputNumberComponent.ctorParameters = function () { return [\n    { type: Renderer, },\n]; };\nInputNumberComponent.propDecorators = {\n    'inputRef': [{ type: ViewChild, args: [\"inputRef\",] },],\n};\nvar InputTextComponent = (function (_super) {\n    __extends(InputTextComponent, _super);\n    /**\n     * @param {?} renderer\n     */\n    function InputTextComponent(renderer) {\n        var _this = _super.call(this, renderer) || this;\n        _this.isRegexTestable = true;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    InputTextComponent.prototype.ngOnInit = function () {\n        this.inputElement = this.inputRef.nativeElement;\n    };\n    return InputTextComponent;\n}(InputBase));\nInputTextComponent.decorators = [\n    { type: Component, args: [{\n                selector: \"inline-editor-text\",\n                styles: [\"a {     text-decoration: none;     color: #428bca;     border-bottom: dashed 1px #428bca;     cursor: pointer;     line-height: 2;     margin-right: 5px;     margin-left: 5px; }   /* editable-empty */  .editable-empty, .editable-empty:hover, .editable-empty:focus, a.editable-empty, a.editable-empty:hover, a.editable-empty:focus {     font-style: italic;     color: #DD1144;     text-decoration: none; }  .inlineEditForm {     display: inline-block;     white-space: nowrap;     margin: 0; }  #inlineEditWrapper {     display: inline-block; }  .inlineEditForm input, select {     width: auto;     display: inline; }  .editInvalid {     color: #a94442;     margin-bottom: 0; }  .error {     border-color: #a94442; }  [hidden] {     display: none; }\"],\n                template: \"<input #inputRef type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"context.value\\\" [required]=\\\"context.required\\\"\\n                      [disabled]=\\\"context.disabled\\\" [name]=\\\"context.name\\\" [placeholder]=\\\"context.placeholder\\\" [size]=\\\"context.size\\\"/>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nInputTextComponent.ctorParameters = function () { return [\n    { type: Renderer, },\n]; };\nInputTextComponent.propDecorators = {\n    'inputRef': [{ type: ViewChild, args: [\"inputRef\",] },],\n};\nvar InputPasswordComponent = (function (_super) {\n    __extends(InputPasswordComponent, _super);\n    /**\n     * @param {?} renderer\n     */\n    function InputPasswordComponent(renderer) {\n        var _this = _super.call(this, renderer) || this;\n        _this.isRegexTestable = true;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    InputPasswordComponent.prototype.ngOnInit = function () {\n        this.inputElement = this.inputRef.nativeElement;\n    };\n    /**\n     * @return {?}\n     */\n    InputPasswordComponent.prototype.getPlaceholder = function () {\n        return \"*****\";\n    };\n    return InputPasswordComponent;\n}(InputBase));\nInputPasswordComponent.decorators = [\n    { type: Component, args: [{\n                selector: \"inline-editor-password\",\n                styles: [\"a {     text-decoration: none;     color: #428bca;     border-bottom: dashed 1px #428bca;     cursor: pointer;     line-height: 2;     margin-right: 5px;     margin-left: 5px; }   /* editable-empty */  .editable-empty, .editable-empty:hover, .editable-empty:focus, a.editable-empty, a.editable-empty:hover, a.editable-empty:focus {     font-style: italic;     color: #DD1144;     text-decoration: none; }  .inlineEditForm {     display: inline-block;     white-space: nowrap;     margin: 0; }  #inlineEditWrapper {     display: inline-block; }  .inlineEditForm input, select {     width: auto;     display: inline; }  .editInvalid {     color: #a94442;     margin-bottom: 0; }  .error {     border-color: #a94442; }  [hidden] {     display: none; }\"],\n                template: \"<input #inputRef type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"context.value\\\" [required]=\\\"context.required\\\"\\n                      [disabled]=\\\"context.disabled\\\" [name]=\\\"context.name\\\" [placeholder]=\\\"context.placeholder\\\" [size]=\\\"context.size\\\"/>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nInputPasswordComponent.ctorParameters = function () { return [\n    { type: Renderer, },\n]; };\nInputPasswordComponent.propDecorators = {\n    'inputRef': [{ type: ViewChild, args: [\"inputRef\",] },],\n};\nvar InputRangeComponent = (function (_super) {\n    __extends(InputRangeComponent, _super);\n    /**\n     * @param {?} renderer\n     */\n    function InputRangeComponent(renderer) {\n        var _this = _super.call(this, renderer) || this;\n        _this.isNumeric = true;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    InputRangeComponent.prototype.ngOnInit = function () {\n        this.inputElement = this.inputRef.nativeElement;\n    };\n    return InputRangeComponent;\n}(InputBase));\nInputRangeComponent.decorators = [\n    { type: Component, args: [{\n                selector: \"inline-editor-range\",\n                styles: [\"a {     text-decoration: none;     color: #428bca;     border-bottom: dashed 1px #428bca;     cursor: pointer;     line-height: 2;     margin-right: 5px;     margin-left: 5px; }   /* editable-empty */  .editable-empty, .editable-empty:hover, .editable-empty:focus, a.editable-empty, a.editable-empty:hover, a.editable-empty:focus {     font-style: italic;     color: #DD1144;     text-decoration: none; }  .inlineEditForm {     display: inline-block;     white-space: nowrap;     margin: 0; }  #inlineEditWrapper {     display: inline-block; }  .inlineEditForm input, select {     width: auto;     display: inline; }  .editInvalid {     color: #a94442;     margin-bottom: 0; }  .error {     border-color: #a94442; }  [hidden] {     display: none; }\"],\n                template: \"<input #inputRef type=\\\"range\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"context.value\\\" [required]=\\\"context.required\\\"\\n                      [disabled]=\\\"context.disabled\\\" [name]=\\\"context.name\\\" [placeholder]=\\\"context.placeholder\\\"\\n                      [min]=\\\"context.min\\\" [max]=\\\"context.max\\\"/>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nInputRangeComponent.ctorParameters = function () { return [\n    { type: Renderer, },\n]; };\nInputRangeComponent.propDecorators = {\n    'inputRef': [{ type: ViewChild, args: [\"inputRef\",] },],\n};\nvar InputTextareaComponent = (function (_super) {\n    __extends(InputTextareaComponent, _super);\n    /**\n     * @param {?} renderer\n     */\n    function InputTextareaComponent(renderer) {\n        var _this = _super.call(this, renderer) || this;\n        _this.isRegexTestable = true;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    InputTextareaComponent.prototype.ngOnInit = function () {\n        this.inputElement = this.inputRef.nativeElement;\n    };\n    return InputTextareaComponent;\n}(InputBase));\nInputTextareaComponent.decorators = [\n    { type: Component, args: [{\n                selector: \"inline-editor-textarea\",\n                styles: [\"a {     text-decoration: none;     color: #428bca;     border-bottom: dashed 1px #428bca;     cursor: pointer;     line-height: 2;     margin-right: 5px;     margin-left: 5px; }   /* editable-empty */  .editable-empty, .editable-empty:hover, .editable-empty:focus, a.editable-empty, a.editable-empty:hover, a.editable-empty:focus {     font-style: italic;     color: #DD1144;     text-decoration: none; }  .inlineEditForm {     display: inline-block;     white-space: nowrap;     margin: 0; }  #inlineEditWrapper {     display: inline-block; }  .inlineEditForm input, select {     width: auto;     display: inline; }  .editInvalid {     color: #a94442;     margin-bottom: 0; }  .error {     border-color: #a94442; }  [hidden] {     display: none; }\"],\n                template: \"<textarea #inputRef class=\\\"form-control\\\" [(ngModel)]=\\\"context.value\\\" [required]=\\\"context.required\\\"\\n                      [rows]=\\\"context.rows\\\" [cols]=\\\"context.cols\\\" [disabled]=\\\"context.disabled\\\" [name]=\\\"context.name\\\"\\n                      [placeholder]=\\\"context.placeholder\\\"></textarea>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nInputTextareaComponent.ctorParameters = function () { return [\n    { type: Renderer, },\n]; };\nInputTextareaComponent.propDecorators = {\n    'inputRef': [{ type: ViewChild, args: [\"inputRef\",] },],\n};\nvar InputSelectComponent = (function (_super) {\n    __extends(InputSelectComponent, _super);\n    /**\n     * @param {?} renderer\n     */\n    function InputSelectComponent(renderer) {\n        return _super.call(this, renderer) || this;\n    }\n    /**\n     * @return {?}\n     */\n    InputSelectComponent.prototype.getPlaceholder = function () {\n        return this.optionSelected();\n    };\n    /**\n     * @return {?}\n     */\n    InputSelectComponent.prototype.optionSelected = function () {\n        var /** @type {?} */ selectedOptionText;\n        var /** @type {?} */ options = this.context.options;\n        if (options && options.data) {\n            for (var _i = 0, _a = options.data; _i < _a.length; _i++) {\n                var option = _a[_i];\n                selectedOptionText = this.getTextOfSelectedOption(option);\n                if (selectedOptionText) {\n                    break;\n                }\n            }\n        }\n        return selectedOptionText ? selectedOptionText : this.context.empty;\n    };\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    InputSelectComponent.prototype.getTextOfSelectedOption = function (options) {\n        var /** @type {?} */ textOfSelectedOption;\n        var _a = ((this.context.options)), text = _a.text, value = _a.value;\n        if (options.children) {\n            for (var _i = 0, _b = options.children; _i < _b.length; _i++) {\n                var child = _b[_i];\n                textOfSelectedOption = this.getTextOfSelectedOption(child);\n                if (textOfSelectedOption) {\n                    break;\n                }\n            }\n        }\n        else {\n            // tslint:disable-next-line:triple-equals\n            if (options[value] == this.context.value) {\n                textOfSelectedOption = options[text];\n            }\n        }\n        return textOfSelectedOption;\n    };\n    /**\n     * @return {?}\n     */\n    InputSelectComponent.prototype.ngOnInit = function () {\n        this.inputElement = this.inputRef.nativeElement;\n    };\n    return InputSelectComponent;\n}(InputBase));\nInputSelectComponent.decorators = [\n    { type: Component, args: [{\n                selector: \"inline-editor-select\",\n                styles: [\"a {     text-decoration: none;     color: #428bca;     border-bottom: dashed 1px #428bca;     cursor: pointer;     line-height: 2;     margin-right: 5px;     margin-left: 5px; }   /* editable-empty */  .editable-empty, .editable-empty:hover, .editable-empty:focus, a.editable-empty, a.editable-empty:hover, a.editable-empty:focus {     font-style: italic;     color: #DD1144;     text-decoration: none; }  .inlineEditForm {     display: inline-block;     white-space: nowrap;     margin: 0; }  #inlineEditWrapper {     display: inline-block; }  .inlineEditForm input, select {     width: auto;     display: inline; }  .editInvalid {     color: #a94442;     margin-bottom: 0; }  .error {     border-color: #a94442; }  [hidden] {     display: none; }\"],\n                template: \"\\n    <select #inputRef class=\\\"form-control\\\" [(ngModel)]=\\\"context.value\\\">\\n        <ng-template ngFor let-option [ngForOf]=\\\"context.options.data\\\">\\n            <optgroup *ngIf=\\\"option.children\\\" [label]=\\\"option[context.options.text]\\\">\\n                <option *ngFor=\\\"let child of option.children\\\" [value]=\\\"child[context.options.value]\\\">\\n                    {{child[context.options.text]}}\\n                </option>\\n            </optgroup>\\n            <option *ngIf=\\\"!option.children\\\" [value]=\\\"option[context.options.value]\\\">{{option[context.options.text]}}</option>\\n        </ng-template>\\n    </select>\\n            \",\n            },] },\n];\n/**\n * @nocollapse\n */\nInputSelectComponent.ctorParameters = function () { return [\n    { type: Renderer, },\n]; };\nInputSelectComponent.propDecorators = {\n    'inputRef': [{ type: ViewChild, args: [\"inputRef\",] },],\n};\nvar InputDateComponent = (function (_super) {\n    __extends(InputDateComponent, _super);\n    /**\n     * @param {?} renderer\n     */\n    function InputDateComponent(renderer) {\n        var _this = _super.call(this, renderer) || this;\n        _this.isRegexTestable = true;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    InputDateComponent.prototype.ngOnInit = function () {\n        this.inputElement = this.inputRef.nativeElement;\n    };\n    return InputDateComponent;\n}(InputBase));\nInputDateComponent.decorators = [\n    { type: Component, args: [{\n                selector: \"inline-editor-date\",\n                styles: [\"a {     text-decoration: none;     color: #428bca;     border-bottom: dashed 1px #428bca;     cursor: pointer;     line-height: 2;     margin-right: 5px;     margin-left: 5px; }   /* editable-empty */  .editable-empty, .editable-empty:hover, .editable-empty:focus, a.editable-empty, a.editable-empty:hover, a.editable-empty:focus {     font-style: italic;     color: #DD1144;     text-decoration: none; }  .inlineEditForm {     display: inline-block;     white-space: nowrap;     margin: 0; }  #inlineEditWrapper {     display: inline-block; }  .inlineEditForm input, select {     width: auto;     display: inline; }  .editInvalid {     color: #a94442;     margin-bottom: 0; }  .error {     border-color: #a94442; }  [hidden] {     display: none; }\"],\n                template: \"<input #inputRef type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"context.value\\\" [required]=\\\"context.required\\\"\\n                      [disabled]=\\\"context.disabled\\\" [name]=\\\"context.name\\\" [placeholder]=\\\"context.placeholder\\\" [size]=\\\"context.size\\\"\\n                      [min]=\\\"context.min\\\" [max]=\\\"context.max\\\"/>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nInputDateComponent.ctorParameters = function () { return [\n    { type: Renderer, },\n]; };\nInputDateComponent.propDecorators = {\n    'inputRef': [{ type: ViewChild, args: [\"inputRef\",] },],\n};\nvar InputTimeComponent = (function (_super) {\n    __extends(InputTimeComponent, _super);\n    /**\n     * @param {?} renderer\n     */\n    function InputTimeComponent(renderer) {\n        var _this = _super.call(this, renderer) || this;\n        _this.isRegexTestable = true;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    InputTimeComponent.prototype.ngOnInit = function () {\n        this.inputElement = this.inputRef.nativeElement;\n    };\n    return InputTimeComponent;\n}(InputBase));\nInputTimeComponent.decorators = [\n    { type: Component, args: [{\n                selector: \"inline-editor-time\",\n                styles: [\"a {     text-decoration: none;     color: #428bca;     border-bottom: dashed 1px #428bca;     cursor: pointer;     line-height: 2;     margin-right: 5px;     margin-left: 5px; }   /* editable-empty */  .editable-empty, .editable-empty:hover, .editable-empty:focus, a.editable-empty, a.editable-empty:hover, a.editable-empty:focus {     font-style: italic;     color: #DD1144;     text-decoration: none; }  .inlineEditForm {     display: inline-block;     white-space: nowrap;     margin: 0; }  #inlineEditWrapper {     display: inline-block; }  .inlineEditForm input, select {     width: auto;     display: inline; }  .editInvalid {     color: #a94442;     margin-bottom: 0; }  .error {     border-color: #a94442; }  [hidden] {     display: none; }\"],\n                template: \"<input #inputRef type=\\\"time\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"context.value\\\" [required]=\\\"context.required\\\"\\n                      [disabled]=\\\"context.disabled\\\" [name]=\\\"context.name\\\" [placeholder]=\\\"context.placeholder\\\" [size]=\\\"context.size\\\"\\n                      [min]=\\\"context.min\\\" [max]=\\\"context.max\\\"/>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nInputTimeComponent.ctorParameters = function () { return [\n    { type: Renderer, },\n]; };\nInputTimeComponent.propDecorators = {\n    'inputRef': [{ type: ViewChild, args: [\"inputRef\",] },],\n};\nvar InputDateTimeComponent = (function (_super) {\n    __extends(InputDateTimeComponent, _super);\n    /**\n     * @param {?} renderer\n     */\n    function InputDateTimeComponent(renderer) {\n        var _this = _super.call(this, renderer) || this;\n        _this.isRegexTestable = true;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    InputDateTimeComponent.prototype.ngOnInit = function () {\n        this.inputElement = this.inputRef.nativeElement;\n    };\n    return InputDateTimeComponent;\n}(InputBase));\nInputDateTimeComponent.decorators = [\n    { type: Component, args: [{\n                selector: \"inline-editor-datetime\",\n                styles: [\"a {     text-decoration: none;     color: #428bca;     border-bottom: dashed 1px #428bca;     cursor: pointer;     line-height: 2;     margin-right: 5px;     margin-left: 5px; }   /* editable-empty */  .editable-empty, .editable-empty:hover, .editable-empty:focus, a.editable-empty, a.editable-empty:hover, a.editable-empty:focus {     font-style: italic;     color: #DD1144;     text-decoration: none; }  .inlineEditForm {     display: inline-block;     white-space: nowrap;     margin: 0; }  #inlineEditWrapper {     display: inline-block; }  .inlineEditForm input, select {     width: auto;     display: inline; }  .editInvalid {     color: #a94442;     margin-bottom: 0; }  .error {     border-color: #a94442; }  [hidden] {     display: none; }\"],\n                template: \"<input #inputRef type=\\\"datetime-local\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"context.value\\\" [required]=\\\"context.required\\\"\\n                      [disabled]=\\\"context.disabled\\\" [name]=\\\"context.name\\\" [placeholder]=\\\"context.placeholder\\\" [size]=\\\"context.size\\\"\\n                      [min]=\\\"context.min\\\" [max]=\\\"context.max\\\"/>\",\n            },] },\n];\n/**\n * @nocollapse\n */\nInputDateTimeComponent.ctorParameters = function () { return [\n    { type: Renderer, },\n]; };\nInputDateTimeComponent.propDecorators = {\n    'inputRef': [{ type: ViewChild, args: [\"inputRef\",] },],\n};\nvar InputComponets = [\n    InputTextComponent,\n    InputNumberComponent,\n    InputPasswordComponent,\n    InputRangeComponent,\n    InputTextareaComponent,\n    InputSelectComponent,\n    InputDateComponent,\n    InputTimeComponent,\n    InputDateTimeComponent,\n];\n// TO-DO Default's value\nvar inputConfig = {\n    options: {\n        data: [],\n        text: \"text\",\n        value: \"value\",\n    },\n    empty: \"empty\",\n    placeholder: \"\",\n    type: \"text\",\n    disabled: false,\n    name: \"\",\n    size: 8,\n    min: 1,\n    pattern: \"\",\n    max: Infinity,\n    /**\n     * @return {?}\n     */\n    fnErrorLength: function () { alert(\"Error: Lenght!\"); },\n    /**\n     * @return {?}\n     */\n    fnErrorPattern: function () { alert(\"Error: Pattern!\"); },\n};\nvar InlineEditorComponent = (function () {\n    /**\n     * @param {?} componentFactoryResolver\n     */\n    function InlineEditorComponent(componentFactoryResolver) {\n        this.componentFactoryResolver = componentFactoryResolver;\n        this.onSave = new EventEmitter();\n        this.onEdit = new EventEmitter();\n        this.onCancel = new EventEmitter();\n        this.cols = 50;\n        this.rows = 4;\n        this.editing = false;\n        this.isEmpty = false;\n        this._value = \"\";\n        this.preValue = \"\";\n        this.components = {\n            text: InputTextComponent,\n            number: InputNumberComponent,\n            password: InputPasswordComponent,\n            range: InputRangeComponent,\n            textarea: InputTextareaComponent,\n            select: InputSelectComponent,\n            date: InputDateComponent,\n            time: InputTimeComponent,\n            datetime: InputDateTimeComponent,\n        };\n    }\n    Object.defineProperty(InlineEditorComponent.prototype, \"options\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._options; },\n        /**\n         * @param {?} options\n         * @return {?}\n         */\n        set: function (options) {\n            this._options = options instanceof Array ?\n                {\n                    data: options,\n                    value: \"value\",\n                    text: \"text\",\n                } : options;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(InlineEditorComponent.prototype, \"value\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._value; },\n        /**\n         * @param {?} newValue\n         * @return {?}\n         */\n        set: function (newValue) {\n            if (newValue !== this._value) {\n                this._value = newValue;\n                this.onChange(newValue);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    /**\n     * @param {?} typeName\n     * @return {?}\n     */\n    InlineEditorComponent.prototype.getComponentType = function (typeName) {\n        var /** @type {?} */ type = this.components[typeName];\n        if (!type) {\n            throw new Error(\"That type does not exist or it is not implemented yet!\");\n        }\n        return type;\n    };\n    /**\n     * @return {?}\n     */\n    InlineEditorComponent.prototype.ngOnInit = function () {\n        if (this.type) {\n            this.initializeProperties();\n            this.generateComponent(this.type);\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    InlineEditorComponent.prototype.generateComponent = function (type) {\n        var /** @type {?} */ componentType = this.getComponentType(type);\n        this.inputInstance = this.createInputInstance(componentType);\n        this.inputInstance.setContext(this);\n    };\n    /**\n     * @param {?} componentType\n     * @return {?}\n     */\n    InlineEditorComponent.prototype.createInputInstance = function (componentType) {\n        var /** @type {?} */ factory = this.componentFactoryResolver.resolveComponentFactory(componentType);\n        this.componentRef = this.container.createComponent(factory);\n        return (this.componentRef.instance);\n    };\n    /**\n     * @return {?}\n     */\n    InlineEditorComponent.prototype.initializeProperties = function () {\n        this.initProperty(\"type\");\n        this.initProperty(\"disabled\");\n        this.initProperty(\"placeholder\");\n        this.initProperty(\"empty\");\n        this.initProperty(\"name\");\n        this.initProperty(\"size\");\n        this.initProperty(\"min\");\n        this.initProperty(\"max\");\n        this.initProperty(\"pattern\");\n        this.initProperty(\"options\");\n        this.initProperty(\"fnErrorLength\");\n        this.initProperty(\"fnErrorPattern\");\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    InlineEditorComponent.prototype.writeValue = function (value) {\n        if (value == null) {\n            this.isEmpty = true;\n        }\n        else {\n            this.value = value;\n            this.isEmpty = false;\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    InlineEditorComponent.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    InlineEditorComponent.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    ;\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    InlineEditorComponent.prototype.edit = function (value) {\n        this.preValue = value; // Store original value in case the form is cancelled\n        this.editing = true;\n        this.inputInstance.focus();\n        this.onEdit.emit(this);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    InlineEditorComponent.prototype.onSubmit = function (value) {\n        if (this.pattern && this.inputInstance.isRegexTestable && !new RegExp(this.pattern).test(value)) {\n            return this.fnErrorPattern();\n        }\n        var /** @type {?} */ length = this.inputInstance.isNumeric ? Number(value) : value.length;\n        if (length < this.min || length > this.max) {\n            return this.fnErrorLength();\n        }\n        this.onSave.emit(value);\n        this.editing = false;\n        this.isEmpty = false;\n    };\n    /**\n     * @return {?}\n     */\n    InlineEditorComponent.prototype.cancel = function () {\n        this.value = this.preValue;\n        this.editing = false;\n        this.onCancel.emit(this);\n    };\n    /**\n     * @param {?} property\n     * @return {?}\n     */\n    InlineEditorComponent.prototype.initProperty = function (property) {\n        this[property] = typeof this[property] !== \"undefined\"\n            ? this[property]\n            : inputConfig[property];\n    };\n    /**\n     * @return {?}\n     */\n    InlineEditorComponent.prototype.showText = function () {\n        return this.inputInstance ? this.inputInstance.getPlaceholder() : \"Loading...\";\n    };\n    return InlineEditorComponent;\n}());\nInlineEditorComponent.decorators = [\n    { type: Component, args: [{\n                selector: \"inline-editor\",\n                template: \"<div>   <div id=\\\"inlineEditWrapper\\\">     <a [ngClass]=\\\"{'editable-empty': isEmpty, 'c-inline-editor' :true }\\\" (click)=\\\"edit(value)\\\" [hidden]=\\\"editing && !disabled\\\">{{ showText() }}</a>     <div class=\\\"c-inline-editor inlineEditForm form-inline\\\" [hidden]=\\\"!editing || disabled\\\">       <div class=\\\"form-group\\\">         <div #container></div>         <span class=\\\"c-inline-editor inline-editor-button-group\\\">          <button id=\\\"inline-editor-button-save\\\" class=\\\"btn btn-xs btn-primary c-inline-editor\\\"             (click)=\\\"onSubmit(value)\\\"><span class=\\\"fa fa-check\\\"></span></button>         <button class=\\\"btn btn-xs btn-danger c-inline-editor\\\" (click)=\\\"cancel()\\\"><span class=\\\"fa fa-remove\\\"></span> </button>         </span>        </div>     </div>   </div> </div>\",\n                providers: [{\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef(function () { return InlineEditorComponent; }),\n                        multi: true,\n                    }],\n                entryComponents: InputComponets,\n            },] },\n];\n/**\n * @nocollapse\n */\nInlineEditorComponent.ctorParameters = function () { return [\n    { type: ComponentFactoryResolver, },\n]; };\nInlineEditorComponent.propDecorators = {\n    'type': [{ type: Input },],\n    'onSave': [{ type: Output },],\n    'onEdit': [{ type: Output },],\n    'onCancel': [{ type: Output },],\n    'empty': [{ type: Input },],\n    'disabled': [{ type: Input },],\n    'required': [{ type: Input },],\n    'placeholder': [{ type: Input },],\n    'name': [{ type: Input },],\n    'size': [{ type: Input },],\n    'min': [{ type: Input },],\n    'max': [{ type: Input },],\n    'pattern': [{ type: Input },],\n    'fnErrorLength': [{ type: Input },],\n    'fnErrorPattern': [{ type: Input },],\n    'cols': [{ type: Input },],\n    'rows': [{ type: Input },],\n    'options': [{ type: Input },],\n    'container': [{ type: ViewChild, args: [\"container\", { read: ViewContainerRef },] },],\n};\nvar InlineEditorModule = (function () {\n    function InlineEditorModule() {\n    }\n    return InlineEditorModule;\n}());\nInlineEditorModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, FormsModule],\n                declarations: [InlineEditorComponent].concat(InputComponets),\n                exports: [InlineEditorComponent],\n            },] },\n];\n/**\n * @nocollapse\n */\nInlineEditorModule.ctorParameters = function () { return []; };\nexport { InlineEditorModule, InputComponets, InlineEditorComponent, InputDateTimeComponent, InputDateComponent, InputNumberComponent, InputPasswordComponent, InputRangeComponent, InputSelectComponent, InputTextComponent, InputTextareaComponent, InputTimeComponent, InputBase };\n"],"sourceRoot":""}