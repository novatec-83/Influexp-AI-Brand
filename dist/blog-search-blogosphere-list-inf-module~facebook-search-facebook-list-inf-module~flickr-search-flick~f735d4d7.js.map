{"version":3,"sources":["webpack:///./node_modules/ng2-inline-editor/ng2-inline-editor.es5.js"],"names":[],"mappings":"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A;AACA;AACA,oBAAoB;AACpB;AACA,0BAA0B,sBAAsB,EAAE;AAClD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA,0BAA0B,oBAAoB,EAAE;AAChD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,sEAAsE,oBAAoB;AAC1F;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,uEAAuE,qBAAqB;AAC5F;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,sFAAsF,oDAAoD,+DAA+D,cAAc;AACvN;AACA,iCAAiC,gEAAiB;AAClD,qCAAqC,gEAAU,cAAc,8BAA8B,EAAE;AAC7F;AACA,qBAAqB;AACrB;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA,oDAAoD;AACpD,KAAK,OAAO,sEAAwB,GAAG;AACvC,EAAE;AACF;AACA,cAAc,OAAO,mDAAK,EAAE;AAC5B,gBAAgB,OAAO,oDAAM,EAAE;AAC/B,gBAAgB,OAAO,oDAAM,EAAE;AAC/B,kBAAkB,OAAO,oDAAM,EAAE;AACjC,eAAe,OAAO,mDAAK,EAAE;AAC7B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,cAAc,OAAO,mDAAK,EAAE;AAC5B,cAAc,OAAO,mDAAK,EAAE;AAC5B,aAAa,OAAO,mDAAK,EAAE;AAC3B,aAAa,OAAO,mDAAK,EAAE;AAC3B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,uBAAuB,OAAO,mDAAK,EAAE;AACrC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,cAAc,OAAO,mDAAK,EAAE;AAC5B,cAAc,OAAO,mDAAK,EAAE;AAC5B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,mBAAmB,OAAO,uDAAS,uBAAuB,OAAO,8DAAgB,EAAE,IAAI;AACvF;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY,EAAE,0DAAW;AACnD;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA,iDAAiD,WAAW;AACyN","file":"blog-search-blogosphere-list-inf-module~facebook-search-facebook-list-inf-module~flickr-search-flick~f735d4d7.js","sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { Component, ComponentFactoryResolver, EventEmitter, Input, NgModule, Output, Renderer, ViewChild, ViewContainerRef, forwardRef } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n/**\r\n * @abstract\r\n */\r\nvar InputBase = (function () {\r\n    /**\r\n     * @param {?} renderer\r\n     */\r\n    function InputBase(renderer) {\r\n        this.renderer = renderer;\r\n        this.isNumeric = false;\r\n        this.isRegexTestable = false;\r\n    }\r\n    /**\r\n     * @param {?} _context\r\n     * @return {?}\r\n     */\r\n    InputBase.prototype.setContext = function (_context) {\r\n        this.context = _context;\r\n        this.whenContextIsReady();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    InputBase.prototype.whenContextIsReady = function () { };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    InputBase.prototype.getPlaceholder = function () {\r\n        return this.context.isEmpty ? this.context.empty : ((this.context.value));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    InputBase.prototype.focus = function () {\r\n        var _this = this;\r\n        setTimeout(function () { return _this.renderer.invokeElementMethod(_this.inputElement, \"focus\", []); });\r\n    };\r\n    return InputBase;\r\n}());\r\nvar InputNumberComponent = (function (_super) {\r\n    __extends(InputNumberComponent, _super);\r\n    /**\r\n     * @param {?} renderer\r\n     */\r\n    function InputNumberComponent(renderer) {\r\n        var _this = _super.call(this, renderer) || this;\r\n        _this.isNumeric = true;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    InputNumberComponent.prototype.ngOnInit = function () {\r\n        this.inputElement = this.inputRef.nativeElement;\r\n    };\r\n    return InputNumberComponent;\r\n}(InputBase));\r\nInputNumberComponent.decorators = [\r\n    { type: Component, args: [{\r\n                selector: \"inline-editor-number\",\r\n                styles: [\"a {     text-decoration: none;     color: #428bca;     border-bottom: dashed 1px #428bca;     cursor: pointer;     line-height: 2;     margin-right: 5px;     margin-left: 5px; }   /* editable-empty */  .editable-empty, .editable-empty:hover, .editable-empty:focus, a.editable-empty, a.editable-empty:hover, a.editable-empty:focus {     font-style: italic;     color: #DD1144;     text-decoration: none; }  .inlineEditForm {     display: inline-block;     white-space: nowrap;     margin: 0; }  #inlineEditWrapper {     display: inline-block; }  .inlineEditForm input, select {     width: auto;     display: inline; }  .editInvalid {     color: #a94442;     margin-bottom: 0; }  .error {     border-color: #a94442; }  [hidden] {     display: none; }\"],\r\n                template: \"<input #inputRef type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"context.value\\\" [required]=\\\"context.required\\\"\\n                      [disabled]=\\\"context.disabled\\\" [name]=\\\"context.name\\\" [placeholder]=\\\"context.placeholder\\\" [size]=\\\"context.size\\\"/>\",\r\n            },] },\r\n];\r\n/**\r\n * @nocollapse\r\n */\r\nInputNumberComponent.ctorParameters = function () { return [\r\n    { type: Renderer, },\r\n]; };\r\nInputNumberComponent.propDecorators = {\r\n    'inputRef': [{ type: ViewChild, args: [\"inputRef\",] },],\r\n};\r\nvar InputTextComponent = (function (_super) {\r\n    __extends(InputTextComponent, _super);\r\n    /**\r\n     * @param {?} renderer\r\n     */\r\n    function InputTextComponent(renderer) {\r\n        var _this = _super.call(this, renderer) || this;\r\n        _this.isRegexTestable = true;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    InputTextComponent.prototype.ngOnInit = function () {\r\n        this.inputElement = this.inputRef.nativeElement;\r\n    };\r\n    return InputTextComponent;\r\n}(InputBase));\r\nInputTextComponent.decorators = [\r\n    { type: Component, args: [{\r\n                selector: \"inline-editor-text\",\r\n                styles: [\"a {     text-decoration: none;     color: #428bca;     border-bottom: dashed 1px #428bca;     cursor: pointer;     line-height: 2;     margin-right: 5px;     margin-left: 5px; }   /* editable-empty */  .editable-empty, .editable-empty:hover, .editable-empty:focus, a.editable-empty, a.editable-empty:hover, a.editable-empty:focus {     font-style: italic;     color: #DD1144;     text-decoration: none; }  .inlineEditForm {     display: inline-block;     white-space: nowrap;     margin: 0; }  #inlineEditWrapper {     display: inline-block; }  .inlineEditForm input, select {     width: auto;     display: inline; }  .editInvalid {     color: #a94442;     margin-bottom: 0; }  .error {     border-color: #a94442; }  [hidden] {     display: none; }\"],\r\n                template: \"<input #inputRef type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"context.value\\\" [required]=\\\"context.required\\\"\\n                      [disabled]=\\\"context.disabled\\\" [name]=\\\"context.name\\\" [placeholder]=\\\"context.placeholder\\\" [size]=\\\"context.size\\\"/>\",\r\n            },] },\r\n];\r\n/**\r\n * @nocollapse\r\n */\r\nInputTextComponent.ctorParameters = function () { return [\r\n    { type: Renderer, },\r\n]; };\r\nInputTextComponent.propDecorators = {\r\n    'inputRef': [{ type: ViewChild, args: [\"inputRef\",] },],\r\n};\r\nvar InputPasswordComponent = (function (_super) {\r\n    __extends(InputPasswordComponent, _super);\r\n    /**\r\n     * @param {?} renderer\r\n     */\r\n    function InputPasswordComponent(renderer) {\r\n        var _this = _super.call(this, renderer) || this;\r\n        _this.isRegexTestable = true;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    InputPasswordComponent.prototype.ngOnInit = function () {\r\n        this.inputElement = this.inputRef.nativeElement;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    InputPasswordComponent.prototype.getPlaceholder = function () {\r\n        return \"*****\";\r\n    };\r\n    return InputPasswordComponent;\r\n}(InputBase));\r\nInputPasswordComponent.decorators = [\r\n    { type: Component, args: [{\r\n                selector: \"inline-editor-password\",\r\n                styles: [\"a {     text-decoration: none;     color: #428bca;     border-bottom: dashed 1px #428bca;     cursor: pointer;     line-height: 2;     margin-right: 5px;     margin-left: 5px; }   /* editable-empty */  .editable-empty, .editable-empty:hover, .editable-empty:focus, a.editable-empty, a.editable-empty:hover, a.editable-empty:focus {     font-style: italic;     color: #DD1144;     text-decoration: none; }  .inlineEditForm {     display: inline-block;     white-space: nowrap;     margin: 0; }  #inlineEditWrapper {     display: inline-block; }  .inlineEditForm input, select {     width: auto;     display: inline; }  .editInvalid {     color: #a94442;     margin-bottom: 0; }  .error {     border-color: #a94442; }  [hidden] {     display: none; }\"],\r\n                template: \"<input #inputRef type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"context.value\\\" [required]=\\\"context.required\\\"\\n                      [disabled]=\\\"context.disabled\\\" [name]=\\\"context.name\\\" [placeholder]=\\\"context.placeholder\\\" [size]=\\\"context.size\\\"/>\",\r\n            },] },\r\n];\r\n/**\r\n * @nocollapse\r\n */\r\nInputPasswordComponent.ctorParameters = function () { return [\r\n    { type: Renderer, },\r\n]; };\r\nInputPasswordComponent.propDecorators = {\r\n    'inputRef': [{ type: ViewChild, args: [\"inputRef\",] },],\r\n};\r\nvar InputRangeComponent = (function (_super) {\r\n    __extends(InputRangeComponent, _super);\r\n    /**\r\n     * @param {?} renderer\r\n     */\r\n    function InputRangeComponent(renderer) {\r\n        var _this = _super.call(this, renderer) || this;\r\n        _this.isNumeric = true;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    InputRangeComponent.prototype.ngOnInit = function () {\r\n        this.inputElement = this.inputRef.nativeElement;\r\n    };\r\n    return InputRangeComponent;\r\n}(InputBase));\r\nInputRangeComponent.decorators = [\r\n    { type: Component, args: [{\r\n                selector: \"inline-editor-range\",\r\n                styles: [\"a {     text-decoration: none;     color: #428bca;     border-bottom: dashed 1px #428bca;     cursor: pointer;     line-height: 2;     margin-right: 5px;     margin-left: 5px; }   /* editable-empty */  .editable-empty, .editable-empty:hover, .editable-empty:focus, a.editable-empty, a.editable-empty:hover, a.editable-empty:focus {     font-style: italic;     color: #DD1144;     text-decoration: none; }  .inlineEditForm {     display: inline-block;     white-space: nowrap;     margin: 0; }  #inlineEditWrapper {     display: inline-block; }  .inlineEditForm input, select {     width: auto;     display: inline; }  .editInvalid {     color: #a94442;     margin-bottom: 0; }  .error {     border-color: #a94442; }  [hidden] {     display: none; }\"],\r\n                template: \"<input #inputRef type=\\\"range\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"context.value\\\" [required]=\\\"context.required\\\"\\n                      [disabled]=\\\"context.disabled\\\" [name]=\\\"context.name\\\" [placeholder]=\\\"context.placeholder\\\"\\n                      [min]=\\\"context.min\\\" [max]=\\\"context.max\\\"/>\",\r\n            },] },\r\n];\r\n/**\r\n * @nocollapse\r\n */\r\nInputRangeComponent.ctorParameters = function () { return [\r\n    { type: Renderer, },\r\n]; };\r\nInputRangeComponent.propDecorators = {\r\n    'inputRef': [{ type: ViewChild, args: [\"inputRef\",] },],\r\n};\r\nvar InputTextareaComponent = (function (_super) {\r\n    __extends(InputTextareaComponent, _super);\r\n    /**\r\n     * @param {?} renderer\r\n     */\r\n    function InputTextareaComponent(renderer) {\r\n        var _this = _super.call(this, renderer) || this;\r\n        _this.isRegexTestable = true;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    InputTextareaComponent.prototype.ngOnInit = function () {\r\n        this.inputElement = this.inputRef.nativeElement;\r\n    };\r\n    return InputTextareaComponent;\r\n}(InputBase));\r\nInputTextareaComponent.decorators = [\r\n    { type: Component, args: [{\r\n                selector: \"inline-editor-textarea\",\r\n                styles: [\"a {     text-decoration: none;     color: #428bca;     border-bottom: dashed 1px #428bca;     cursor: pointer;     line-height: 2;     margin-right: 5px;     margin-left: 5px; }   /* editable-empty */  .editable-empty, .editable-empty:hover, .editable-empty:focus, a.editable-empty, a.editable-empty:hover, a.editable-empty:focus {     font-style: italic;     color: #DD1144;     text-decoration: none; }  .inlineEditForm {     display: inline-block;     white-space: nowrap;     margin: 0; }  #inlineEditWrapper {     display: inline-block; }  .inlineEditForm input, select {     width: auto;     display: inline; }  .editInvalid {     color: #a94442;     margin-bottom: 0; }  .error {     border-color: #a94442; }  [hidden] {     display: none; }\"],\r\n                template: \"<textarea #inputRef class=\\\"form-control\\\" [(ngModel)]=\\\"context.value\\\" [required]=\\\"context.required\\\"\\n                      [rows]=\\\"context.rows\\\" [cols]=\\\"context.cols\\\" [disabled]=\\\"context.disabled\\\" [name]=\\\"context.name\\\"\\n                      [placeholder]=\\\"context.placeholder\\\"></textarea>\",\r\n            },] },\r\n];\r\n/**\r\n * @nocollapse\r\n */\r\nInputTextareaComponent.ctorParameters = function () { return [\r\n    { type: Renderer, },\r\n]; };\r\nInputTextareaComponent.propDecorators = {\r\n    'inputRef': [{ type: ViewChild, args: [\"inputRef\",] },],\r\n};\r\nvar InputSelectComponent = (function (_super) {\r\n    __extends(InputSelectComponent, _super);\r\n    /**\r\n     * @param {?} renderer\r\n     */\r\n    function InputSelectComponent(renderer) {\r\n        return _super.call(this, renderer) || this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    InputSelectComponent.prototype.getPlaceholder = function () {\r\n        return this.optionSelected();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    InputSelectComponent.prototype.optionSelected = function () {\r\n        var /** @type {?} */ selectedOptionText;\r\n        var /** @type {?} */ options = this.context.options;\r\n        if (options && options.data) {\r\n            for (var _i = 0, _a = options.data; _i < _a.length; _i++) {\r\n                var option = _a[_i];\r\n                selectedOptionText = this.getTextOfSelectedOption(option);\r\n                if (selectedOptionText) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return selectedOptionText ? selectedOptionText : this.context.empty;\r\n    };\r\n    /**\r\n     * @param {?} options\r\n     * @return {?}\r\n     */\r\n    InputSelectComponent.prototype.getTextOfSelectedOption = function (options) {\r\n        var /** @type {?} */ textOfSelectedOption;\r\n        var _a = ((this.context.options)), text = _a.text, value = _a.value;\r\n        if (options.children) {\r\n            for (var _i = 0, _b = options.children; _i < _b.length; _i++) {\r\n                var child = _b[_i];\r\n                textOfSelectedOption = this.getTextOfSelectedOption(child);\r\n                if (textOfSelectedOption) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // tslint:disable-next-line:triple-equals\r\n            if (options[value] == this.context.value) {\r\n                textOfSelectedOption = options[text];\r\n            }\r\n        }\r\n        return textOfSelectedOption;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    InputSelectComponent.prototype.ngOnInit = function () {\r\n        this.inputElement = this.inputRef.nativeElement;\r\n    };\r\n    return InputSelectComponent;\r\n}(InputBase));\r\nInputSelectComponent.decorators = [\r\n    { type: Component, args: [{\r\n                selector: \"inline-editor-select\",\r\n                styles: [\"a {     text-decoration: none;     color: #428bca;     border-bottom: dashed 1px #428bca;     cursor: pointer;     line-height: 2;     margin-right: 5px;     margin-left: 5px; }   /* editable-empty */  .editable-empty, .editable-empty:hover, .editable-empty:focus, a.editable-empty, a.editable-empty:hover, a.editable-empty:focus {     font-style: italic;     color: #DD1144;     text-decoration: none; }  .inlineEditForm {     display: inline-block;     white-space: nowrap;     margin: 0; }  #inlineEditWrapper {     display: inline-block; }  .inlineEditForm input, select {     width: auto;     display: inline; }  .editInvalid {     color: #a94442;     margin-bottom: 0; }  .error {     border-color: #a94442; }  [hidden] {     display: none; }\"],\r\n                template: \"\\n    <select #inputRef class=\\\"form-control\\\" [(ngModel)]=\\\"context.value\\\">\\n        <ng-template ngFor let-option [ngForOf]=\\\"context.options.data\\\">\\n            <optgroup *ngIf=\\\"option.children\\\" [label]=\\\"option[context.options.text]\\\">\\n                <option *ngFor=\\\"let child of option.children\\\" [value]=\\\"child[context.options.value]\\\">\\n                    {{child[context.options.text]}}\\n                </option>\\n            </optgroup>\\n            <option *ngIf=\\\"!option.children\\\" [value]=\\\"option[context.options.value]\\\">{{option[context.options.text]}}</option>\\n        </ng-template>\\n    </select>\\n            \",\r\n            },] },\r\n];\r\n/**\r\n * @nocollapse\r\n */\r\nInputSelectComponent.ctorParameters = function () { return [\r\n    { type: Renderer, },\r\n]; };\r\nInputSelectComponent.propDecorators = {\r\n    'inputRef': [{ type: ViewChild, args: [\"inputRef\",] },],\r\n};\r\nvar InputDateComponent = (function (_super) {\r\n    __extends(InputDateComponent, _super);\r\n    /**\r\n     * @param {?} renderer\r\n     */\r\n    function InputDateComponent(renderer) {\r\n        var _this = _super.call(this, renderer) || this;\r\n        _this.isRegexTestable = true;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    InputDateComponent.prototype.ngOnInit = function () {\r\n        this.inputElement = this.inputRef.nativeElement;\r\n    };\r\n    return InputDateComponent;\r\n}(InputBase));\r\nInputDateComponent.decorators = [\r\n    { type: Component, args: [{\r\n                selector: \"inline-editor-date\",\r\n                styles: [\"a {     text-decoration: none;     color: #428bca;     border-bottom: dashed 1px #428bca;     cursor: pointer;     line-height: 2;     margin-right: 5px;     margin-left: 5px; }   /* editable-empty */  .editable-empty, .editable-empty:hover, .editable-empty:focus, a.editable-empty, a.editable-empty:hover, a.editable-empty:focus {     font-style: italic;     color: #DD1144;     text-decoration: none; }  .inlineEditForm {     display: inline-block;     white-space: nowrap;     margin: 0; }  #inlineEditWrapper {     display: inline-block; }  .inlineEditForm input, select {     width: auto;     display: inline; }  .editInvalid {     color: #a94442;     margin-bottom: 0; }  .error {     border-color: #a94442; }  [hidden] {     display: none; }\"],\r\n                template: \"<input #inputRef type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"context.value\\\" [required]=\\\"context.required\\\"\\n                      [disabled]=\\\"context.disabled\\\" [name]=\\\"context.name\\\" [placeholder]=\\\"context.placeholder\\\" [size]=\\\"context.size\\\"\\n                      [min]=\\\"context.min\\\" [max]=\\\"context.max\\\"/>\",\r\n            },] },\r\n];\r\n/**\r\n * @nocollapse\r\n */\r\nInputDateComponent.ctorParameters = function () { return [\r\n    { type: Renderer, },\r\n]; };\r\nInputDateComponent.propDecorators = {\r\n    'inputRef': [{ type: ViewChild, args: [\"inputRef\",] },],\r\n};\r\nvar InputTimeComponent = (function (_super) {\r\n    __extends(InputTimeComponent, _super);\r\n    /**\r\n     * @param {?} renderer\r\n     */\r\n    function InputTimeComponent(renderer) {\r\n        var _this = _super.call(this, renderer) || this;\r\n        _this.isRegexTestable = true;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    InputTimeComponent.prototype.ngOnInit = function () {\r\n        this.inputElement = this.inputRef.nativeElement;\r\n    };\r\n    return InputTimeComponent;\r\n}(InputBase));\r\nInputTimeComponent.decorators = [\r\n    { type: Component, args: [{\r\n                selector: \"inline-editor-time\",\r\n                styles: [\"a {     text-decoration: none;     color: #428bca;     border-bottom: dashed 1px #428bca;     cursor: pointer;     line-height: 2;     margin-right: 5px;     margin-left: 5px; }   /* editable-empty */  .editable-empty, .editable-empty:hover, .editable-empty:focus, a.editable-empty, a.editable-empty:hover, a.editable-empty:focus {     font-style: italic;     color: #DD1144;     text-decoration: none; }  .inlineEditForm {     display: inline-block;     white-space: nowrap;     margin: 0; }  #inlineEditWrapper {     display: inline-block; }  .inlineEditForm input, select {     width: auto;     display: inline; }  .editInvalid {     color: #a94442;     margin-bottom: 0; }  .error {     border-color: #a94442; }  [hidden] {     display: none; }\"],\r\n                template: \"<input #inputRef type=\\\"time\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"context.value\\\" [required]=\\\"context.required\\\"\\n                      [disabled]=\\\"context.disabled\\\" [name]=\\\"context.name\\\" [placeholder]=\\\"context.placeholder\\\" [size]=\\\"context.size\\\"\\n                      [min]=\\\"context.min\\\" [max]=\\\"context.max\\\"/>\",\r\n            },] },\r\n];\r\n/**\r\n * @nocollapse\r\n */\r\nInputTimeComponent.ctorParameters = function () { return [\r\n    { type: Renderer, },\r\n]; };\r\nInputTimeComponent.propDecorators = {\r\n    'inputRef': [{ type: ViewChild, args: [\"inputRef\",] },],\r\n};\r\nvar InputDateTimeComponent = (function (_super) {\r\n    __extends(InputDateTimeComponent, _super);\r\n    /**\r\n     * @param {?} renderer\r\n     */\r\n    function InputDateTimeComponent(renderer) {\r\n        var _this = _super.call(this, renderer) || this;\r\n        _this.isRegexTestable = true;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    InputDateTimeComponent.prototype.ngOnInit = function () {\r\n        this.inputElement = this.inputRef.nativeElement;\r\n    };\r\n    return InputDateTimeComponent;\r\n}(InputBase));\r\nInputDateTimeComponent.decorators = [\r\n    { type: Component, args: [{\r\n                selector: \"inline-editor-datetime\",\r\n                styles: [\"a {     text-decoration: none;     color: #428bca;     border-bottom: dashed 1px #428bca;     cursor: pointer;     line-height: 2;     margin-right: 5px;     margin-left: 5px; }   /* editable-empty */  .editable-empty, .editable-empty:hover, .editable-empty:focus, a.editable-empty, a.editable-empty:hover, a.editable-empty:focus {     font-style: italic;     color: #DD1144;     text-decoration: none; }  .inlineEditForm {     display: inline-block;     white-space: nowrap;     margin: 0; }  #inlineEditWrapper {     display: inline-block; }  .inlineEditForm input, select {     width: auto;     display: inline; }  .editInvalid {     color: #a94442;     margin-bottom: 0; }  .error {     border-color: #a94442; }  [hidden] {     display: none; }\"],\r\n                template: \"<input #inputRef type=\\\"datetime-local\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"context.value\\\" [required]=\\\"context.required\\\"\\n                      [disabled]=\\\"context.disabled\\\" [name]=\\\"context.name\\\" [placeholder]=\\\"context.placeholder\\\" [size]=\\\"context.size\\\"\\n                      [min]=\\\"context.min\\\" [max]=\\\"context.max\\\"/>\",\r\n            },] },\r\n];\r\n/**\r\n * @nocollapse\r\n */\r\nInputDateTimeComponent.ctorParameters = function () { return [\r\n    { type: Renderer, },\r\n]; };\r\nInputDateTimeComponent.propDecorators = {\r\n    'inputRef': [{ type: ViewChild, args: [\"inputRef\",] },],\r\n};\r\nvar InputComponets = [\r\n    InputTextComponent,\r\n    InputNumberComponent,\r\n    InputPasswordComponent,\r\n    InputRangeComponent,\r\n    InputTextareaComponent,\r\n    InputSelectComponent,\r\n    InputDateComponent,\r\n    InputTimeComponent,\r\n    InputDateTimeComponent,\r\n];\r\n// TO-DO Default's value\r\nvar inputConfig = {\r\n    options: {\r\n        data: [],\r\n        text: \"text\",\r\n        value: \"value\",\r\n    },\r\n    empty: \"empty\",\r\n    placeholder: \"\",\r\n    type: \"text\",\r\n    disabled: false,\r\n    name: \"\",\r\n    size: 8,\r\n    min: 1,\r\n    pattern: \"\",\r\n    max: Infinity,\r\n    /**\r\n     * @return {?}\r\n     */\r\n    fnErrorLength: function () { alert(\"Error: Lenght!\"); },\r\n    /**\r\n     * @return {?}\r\n     */\r\n    fnErrorPattern: function () { alert(\"Error: Pattern!\"); },\r\n};\r\nvar InlineEditorComponent = (function () {\r\n    /**\r\n     * @param {?} componentFactoryResolver\r\n     */\r\n    function InlineEditorComponent(componentFactoryResolver) {\r\n        this.componentFactoryResolver = componentFactoryResolver;\r\n        this.onSave = new EventEmitter();\r\n        this.onEdit = new EventEmitter();\r\n        this.onCancel = new EventEmitter();\r\n        this.cols = 50;\r\n        this.rows = 4;\r\n        this.editing = false;\r\n        this.isEmpty = false;\r\n        this._value = \"\";\r\n        this.preValue = \"\";\r\n        this.components = {\r\n            text: InputTextComponent,\r\n            number: InputNumberComponent,\r\n            password: InputPasswordComponent,\r\n            range: InputRangeComponent,\r\n            textarea: InputTextareaComponent,\r\n            select: InputSelectComponent,\r\n            date: InputDateComponent,\r\n            time: InputTimeComponent,\r\n            datetime: InputDateTimeComponent,\r\n        };\r\n    }\r\n    Object.defineProperty(InlineEditorComponent.prototype, \"options\", {\r\n        /**\r\n         * @return {?}\r\n         */\r\n        get: function () { return this._options; },\r\n        /**\r\n         * @param {?} options\r\n         * @return {?}\r\n         */\r\n        set: function (options) {\r\n            this._options = options instanceof Array ?\r\n                {\r\n                    data: options,\r\n                    value: \"value\",\r\n                    text: \"text\",\r\n                } : options;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InlineEditorComponent.prototype, \"value\", {\r\n        /**\r\n         * @return {?}\r\n         */\r\n        get: function () { return this._value; },\r\n        /**\r\n         * @param {?} newValue\r\n         * @return {?}\r\n         */\r\n        set: function (newValue) {\r\n            if (newValue !== this._value) {\r\n                this._value = newValue;\r\n                this.onChange(newValue);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ;\r\n    /**\r\n     * @param {?} typeName\r\n     * @return {?}\r\n     */\r\n    InlineEditorComponent.prototype.getComponentType = function (typeName) {\r\n        var /** @type {?} */ type = this.components[typeName];\r\n        if (!type) {\r\n            throw new Error(\"That type does not exist or it is not implemented yet!\");\r\n        }\r\n        return type;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    InlineEditorComponent.prototype.ngOnInit = function () {\r\n        if (this.type) {\r\n            this.initializeProperties();\r\n            this.generateComponent(this.type);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} type\r\n     * @return {?}\r\n     */\r\n    InlineEditorComponent.prototype.generateComponent = function (type) {\r\n        var /** @type {?} */ componentType = this.getComponentType(type);\r\n        this.inputInstance = this.createInputInstance(componentType);\r\n        this.inputInstance.setContext(this);\r\n    };\r\n    /**\r\n     * @param {?} componentType\r\n     * @return {?}\r\n     */\r\n    InlineEditorComponent.prototype.createInputInstance = function (componentType) {\r\n        var /** @type {?} */ factory = this.componentFactoryResolver.resolveComponentFactory(componentType);\r\n        this.componentRef = this.container.createComponent(factory);\r\n        return (this.componentRef.instance);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    InlineEditorComponent.prototype.initializeProperties = function () {\r\n        this.initProperty(\"type\");\r\n        this.initProperty(\"disabled\");\r\n        this.initProperty(\"placeholder\");\r\n        this.initProperty(\"empty\");\r\n        this.initProperty(\"name\");\r\n        this.initProperty(\"size\");\r\n        this.initProperty(\"min\");\r\n        this.initProperty(\"max\");\r\n        this.initProperty(\"pattern\");\r\n        this.initProperty(\"options\");\r\n        this.initProperty(\"fnErrorLength\");\r\n        this.initProperty(\"fnErrorPattern\");\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    InlineEditorComponent.prototype.writeValue = function (value) {\r\n        if (value == null) {\r\n            this.isEmpty = true;\r\n        }\r\n        else {\r\n            this.value = value;\r\n            this.isEmpty = false;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    InlineEditorComponent.prototype.registerOnChange = function (fn) { this.onChange = fn; };\r\n    /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    InlineEditorComponent.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\r\n    ;\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    InlineEditorComponent.prototype.edit = function (value) {\r\n        this.preValue = value; // Store original value in case the form is cancelled\r\n        this.editing = true;\r\n        this.inputInstance.focus();\r\n        this.onEdit.emit(this);\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    InlineEditorComponent.prototype.onSubmit = function (value) {\r\n        if (this.pattern && this.inputInstance.isRegexTestable && !new RegExp(this.pattern).test(value)) {\r\n            return this.fnErrorPattern();\r\n        }\r\n        var /** @type {?} */ length = this.inputInstance.isNumeric ? Number(value) : value.length;\r\n        if (length < this.min || length > this.max) {\r\n            return this.fnErrorLength();\r\n        }\r\n        this.onSave.emit(value);\r\n        this.editing = false;\r\n        this.isEmpty = false;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    InlineEditorComponent.prototype.cancel = function () {\r\n        this.value = this.preValue;\r\n        this.editing = false;\r\n        this.onCancel.emit(this);\r\n    };\r\n    /**\r\n     * @param {?} property\r\n     * @return {?}\r\n     */\r\n    InlineEditorComponent.prototype.initProperty = function (property) {\r\n        this[property] = typeof this[property] !== \"undefined\"\r\n            ? this[property]\r\n            : inputConfig[property];\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    InlineEditorComponent.prototype.showText = function () {\r\n        return this.inputInstance ? this.inputInstance.getPlaceholder() : \"Loading...\";\r\n    };\r\n    return InlineEditorComponent;\r\n}());\r\nInlineEditorComponent.decorators = [\r\n    { type: Component, args: [{\r\n                selector: \"inline-editor\",\r\n                template: \"<div>   <div id=\\\"inlineEditWrapper\\\">     <a [ngClass]=\\\"{'editable-empty': isEmpty, 'c-inline-editor' :true }\\\" (click)=\\\"edit(value)\\\" [hidden]=\\\"editing && !disabled\\\">{{ showText() }}</a>     <div class=\\\"c-inline-editor inlineEditForm form-inline\\\" [hidden]=\\\"!editing || disabled\\\">       <div class=\\\"form-group\\\">         <div #container></div>         <span class=\\\"c-inline-editor inline-editor-button-group\\\">          <button id=\\\"inline-editor-button-save\\\" class=\\\"btn btn-xs btn-primary c-inline-editor\\\"             (click)=\\\"onSubmit(value)\\\"><span class=\\\"fa fa-check\\\"></span></button>         <button class=\\\"btn btn-xs btn-danger c-inline-editor\\\" (click)=\\\"cancel()\\\"><span class=\\\"fa fa-remove\\\"></span> </button>         </span>        </div>     </div>   </div> </div>\",\r\n                providers: [{\r\n                        provide: NG_VALUE_ACCESSOR,\r\n                        useExisting: forwardRef(function () { return InlineEditorComponent; }),\r\n                        multi: true,\r\n                    }],\r\n                entryComponents: InputComponets,\r\n            },] },\r\n];\r\n/**\r\n * @nocollapse\r\n */\r\nInlineEditorComponent.ctorParameters = function () { return [\r\n    { type: ComponentFactoryResolver, },\r\n]; };\r\nInlineEditorComponent.propDecorators = {\r\n    'type': [{ type: Input },],\r\n    'onSave': [{ type: Output },],\r\n    'onEdit': [{ type: Output },],\r\n    'onCancel': [{ type: Output },],\r\n    'empty': [{ type: Input },],\r\n    'disabled': [{ type: Input },],\r\n    'required': [{ type: Input },],\r\n    'placeholder': [{ type: Input },],\r\n    'name': [{ type: Input },],\r\n    'size': [{ type: Input },],\r\n    'min': [{ type: Input },],\r\n    'max': [{ type: Input },],\r\n    'pattern': [{ type: Input },],\r\n    'fnErrorLength': [{ type: Input },],\r\n    'fnErrorPattern': [{ type: Input },],\r\n    'cols': [{ type: Input },],\r\n    'rows': [{ type: Input },],\r\n    'options': [{ type: Input },],\r\n    'container': [{ type: ViewChild, args: [\"container\", { read: ViewContainerRef },] },],\r\n};\r\nvar InlineEditorModule = (function () {\r\n    function InlineEditorModule() {\r\n    }\r\n    return InlineEditorModule;\r\n}());\r\nInlineEditorModule.decorators = [\r\n    { type: NgModule, args: [{\r\n                imports: [CommonModule, FormsModule],\r\n                declarations: [InlineEditorComponent].concat(InputComponets),\r\n                exports: [InlineEditorComponent],\r\n            },] },\r\n];\r\n/**\r\n * @nocollapse\r\n */\r\nInlineEditorModule.ctorParameters = function () { return []; };\r\nexport { InlineEditorModule, InputComponets, InlineEditorComponent, InputDateTimeComponent, InputDateComponent, InputNumberComponent, InputPasswordComponent, InputRangeComponent, InputSelectComponent, InputTextComponent, InputTextareaComponent, InputTimeComponent, InputBase };\r\n"],"sourceRoot":""}